<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Je teste donc je suis</title>
 <link href="http://blog.fabricebournisien.eu//atom.xml" rel="self"/>
 <link href="http://blog.fabricebournisien.eu//"/>
 <updated>2015-12-23T22:25:03+01:00</updated>
 <id>http://blog.fabricebournisien.eu/</id>
 <author>
   <name>Fabrice Bournisien</name>
   <email>fabrice.bournisien@gmail.com</email>
 </author>

 
 <entry>
   <title>L'empirique au service des tests</title>
   <link href="http://blog.fabricebournisien.eu///2015/09/28/empirique-service-tests/"/>
   <updated>2015-09-28T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2015/09/28/empirique-service-tests</id>
   <content type="html">&lt;h3&gt;Contexte&lt;/h3&gt;

&lt;p&gt;Je travaille souvent à tester des comportements liés à la vidéo. Vérifier qu&amp;#39;elle se déroule bien, qu&amp;#39;elle se finit au moment voulu, que les interactions sont possibles.
Une des problématiques est de pouvoir vérifier que les évenements de tracking (statistiques, etc.) sont bien envoyés au bon moment.&lt;/p&gt;

&lt;p&gt;Dans mon cas, chaque événement est un appel à un pixel précis, avec un tas de paramètres. L&amp;#39;intérêt pour l&amp;#39;utilisateur est de pouvoir vérifier le fonctionnement, et par exemple déterminer si les utilisateurs qui mettent en pause à un moment relancent la vidéo pour la regarder jusqu&amp;#39;au bout.&lt;/p&gt;

&lt;p&gt;Lorsqu&amp;#39;on teste ce genre de chose manuellement, il suffit d&amp;#39;ouvrir la console réseau du navigateur, et de vérifier que les urls sont bien appelées au bon moment.&lt;/p&gt;

&lt;h3&gt;Industrialisation&lt;/h3&gt;

&lt;p&gt;Dans mon cas, j&amp;#39;ai besoin d&amp;#39;effectuer une centaine de contrôles de ce type, sur différents navigateurs, tous les jours. L&amp;#39;ensemble des tests étant écrit en ruby / watir-webdriver, j&amp;#39;ai longtemps chercher une solution permettant via webdriver de vérifier ce qui passait au niveau réseau. &lt;/p&gt;

&lt;p&gt;J&amp;#39;ai envisagé un temps de démarrer mes navigateurs en leur ajoutant un plugin : webdriver permet de le faire à la volée avec le fichier xpi. Mais cela ne marche pas pour Internet Explorer, que je ne peux pas exclure des tests.&lt;/p&gt;

&lt;p&gt;Après des semaines de réflexions, par une nuit d&amp;#39;insomnie, j&amp;#39;ai trouvé une solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installer un proxy sur le serveur de tests&lt;/li&gt;
&lt;li&gt;Analyser les logs de ce proxy pour mes besoins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le choix du proxy était &amp;quot;limité&amp;quot; avec de nombreuses contraintes : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Besoin d&amp;#39;avoir un fichier de logs&lt;/li&gt;
&lt;li&gt;Besoin de pouvoir le contrôler en ruby (ou dans un navigateur)&lt;/li&gt;
&lt;li&gt;Besoin de fonctionner sur windows et mac&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mon choix s&amp;#39;est porté vers &lt;a href=&quot;http://www.charlesproxy.com/&quot;&gt;Charles proxy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Le fichier de log de charles étant horodaté, nous avons pu comparer les événements les uns par rapport aux autres. Pour vérifier, par exemple, que l&amp;#39;evenement &amp;quot;50%&amp;quot; se produit à la moitié de la durée de la vidéo.&lt;/p&gt;

&lt;p&gt;Il a suffit d&amp;#39;ajouter des urls bien reconnaissables pour toutes nos vidéos de tests et de se retrousser les manches.&lt;/p&gt;

&lt;h3&gt;Problèmes&lt;/h3&gt;

&lt;p&gt;Durant la mise en place de cette solution (et sa maintenance), nous avons rencontrés plusieurs problèmes :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nécessité, pour chaque scénario, de redémarrer le proxy. Il est gourmand en ressources (mémoire principalement), et nos centaines de tests journaliers le mettent à rude épreuve.&lt;/li&gt;
&lt;li&gt;Lors d&amp;#39;un test où nous en avons besoin, il faut pour l&amp;#39;analyser ouvrir un navigateur, télécharger le fichier de log (format CSV), filter les lignes utiles, etc. Cela est couteux en temps. Le fichier de log pèse environ 1mo à chaque fois. Cela est couteux en temps.&lt;/li&gt;
&lt;li&gt;Les tests de vidéo sur mobile rencontrent parfois des lenteurs, ce qui compliquent l&amp;#39;analyse des écarts de temps.&lt;/li&gt;
&lt;li&gt;Le format du fichier de log (en particulier les dates) est différent enttre windows et mac.&lt;/li&gt;
&lt;li&gt;Cela empêche la paralélisation sur une même serveur.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Bénéfices&lt;/h3&gt;

&lt;p&gt;Malgré ces défauts, ce système nous convenait parfaitement.&lt;/p&gt;

&lt;p&gt;Il nous a permis d&amp;#39;industrialiser des tests sur un point clé de certains projets, sur tous les navigateurs, y comrpis sur mobile.&lt;/p&gt;

&lt;p&gt;Lorsqu&amp;#39;un nouveau collègue est arrivé dans l&amp;#39;équipe en juillet, et que je lui ai présenté cette brique bien pratique, il a trouvé ça intéressant, et trouvait l&amp;#39;idée originale.&lt;/p&gt;

&lt;h3&gt;On prend les mêmes et on recommence, mais pas tout à fait&lt;/h3&gt;

&lt;p&gt;Quelques mois plus tard, lors d&amp;#39;une discussion avec un collègue sans aucun rapport, j&amp;#39;ai eu une meilleure idée.
Objectifs: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Diminuer le temps d&amp;#39;initialisation&lt;/li&gt;
&lt;li&gt;Simplifier le code (et donc faciliter la maintenance)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plutôt que d&amp;#39;analyser le départ de tous les pixels, on inverse la pensée. Comme dans la vraie vie, il faut que nous ayons notre propre serveur web, qui récupère les appels à des pixels, et il nous faut &amp;quot;juste&amp;quot; analyser les logs de ce serveur.
C&amp;#39;est là qu&amp;#39;entre en scène node.js, et et plus précisement son http-server.&lt;/p&gt;

&lt;p&gt;Dans un dossier proxy, on créer un fichier html. On édite les urls de pixels de toutes nos vidéos de tests, pour appeler le serveur local http://127..0.0.1:8080/track.htm?action=pause&amp;amp;id=123456&lt;/p&gt;

&lt;p&gt;Ensuite, la ligne de commande &lt;code&gt;http-server proxy/ --cors -a 127.0.0.1 &amp;gt;&amp;gt; proxy/log.txt&lt;/code&gt; permet de lancer le serveur localement, et d&amp;#39;avoir le log dans un fichier lui même accessible sur le serveur.&lt;/p&gt;

&lt;p&gt;Pour l&amp;#39;analyse du log, il est disponible via une véritable url, donc on gagne du temps : pas besoin d&amp;#39;ouvrir un navigateur comme avec le log de charles.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://127.0.0.1:8080/log.txt&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Bénéfices&lt;/h3&gt;

&lt;p&gt;Quand j&amp;#39;ai commencé cette modification, j&amp;#39;espérais gagner un peu de temps. 
Nous avions à ce moment là environ 100h de tests, et pour certains projets, je n&amp;#39;attendais pas de gros gains. Et puis, j&amp;#39;ai fait les calculs. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quelques centaines de scenarios n&amp;#39;ont plus besoin du tout d&amp;#39;initialisation. 10 à 15 secondes à chaque fois sur windows.&lt;/li&gt;
&lt;li&gt;Le fichier de log (1 Mo / scenario auparavant) a fortement diminué. Puisqu&amp;#39;on ne log plus que ce qui est utile, on gagne plus de 99% de taille de fichier de log.&lt;/li&gt;
&lt;li&gt;La non ouverture du navigateur pour télécharger le fichier de log fait également gagner beaucoup de temps.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Première estimation : environ 4h de gagnées parmi les 100h de tests.&lt;/p&gt;

&lt;p&gt;Lors des premiers tests, sur mon mac, j&amp;#39;ai eu l&amp;#39;impression que mes calculs sous estimaient les gains. On a en fait avoisiné les 6h30 de gain.&lt;/p&gt;

&lt;p&gt;Après analyses et contrôles, quelques pistes supplémentaires pour expliquer ces gains en plus:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sans proxy, les pages s&amp;#39;affichent un tout petit peu plus vite. Non perceptible à l&amp;#39;oeil humain, mais vu la quantité de pages de nos batteries de tests, c&amp;#39;est sensible.&lt;/li&gt;
&lt;li&gt;La mémoire vive libérée par ce changement sur les serveurs windows peut être utilisée par le serveur à autre chose de &amp;quot;plus utile&amp;quot; pour les tests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C&amp;#39;est finalement une clef primordiale quand on met en place des tests sur de gros projets: il faut tester brique par brique, et améliorer la solidité et la couvertue de façon empirique.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>La simplicité n'est pas toujours simple</title>
   <link href="http://blog.fabricebournisien.eu///2015/01/15/kiss-simple-n-est-pas-toujours-simple/"/>
   <updated>2015-01-15T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2015/01/15/kiss-simple-n-est-pas-toujours-simple</id>
   <content type="html">&lt;p&gt;Comme je le disais il y a peu, sur les gros projets, il est intéressant de &lt;a href=&quot;/2014/12/13/kiss-simple-et-efficace/&quot;&gt;surveiller la simplicité&lt;/a&gt; du code.
J&amp;#39;utilise pour cela &lt;a href=&quot;https://rubygems.org/gems/flog&quot;&gt;flog&lt;/a&gt; qui calcule la complexité des méthodes.&lt;/p&gt;

&lt;h3&gt;Zone grise&lt;/h3&gt;

&lt;p&gt;Sur notre projet actuel, le score total flog est de plus de 6300 points de complexité d&amp;#39;après flog. Avec une moyenne de 12.7 et un maximum de 206.5, le champ est large.&lt;/p&gt;

&lt;p&gt;Répartition des plus hauts scores: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;gt; 200 : 1 fonction&lt;/li&gt;
&lt;li&gt;&amp;gt; 100 : 3 fonctions&lt;/li&gt;
&lt;li&gt;&amp;gt; 50 : 16 fonctions&lt;/li&gt;
&lt;li&gt;&amp;gt; 20 : 41 fonctions&lt;/li&gt;
&lt;li&gt;&amp;lt; 20 : un peu plus de 400.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Evidemment, quand je cherche à simplifier, je commence à regarder les fonctions les plus complexes. Il est souvent plus facile de simplifier une chose compliquée qu&amp;#39;une chose déjà simple.&lt;/p&gt;

&lt;p&gt;Il est pourtant très difficile de savoir quelle est la limite acceptable. Selon les gens, et les projets, cela varie entre 25 et 60.
On définit par conséquent une zone grise, contenant les fonctions &amp;quot;à vérifier&amp;quot; et à simplifier si possible, au cas par cas.&lt;/p&gt;

&lt;p&gt;Au dessus, il faut bien évidemment faire quelque chose. En dessous, c&amp;#39;est peu utile. J&amp;#39;ai donc encore quelques fonctions bien tordues à simplifier sur le projet, pour respecter cette règle à la lettre.&lt;/p&gt;

&lt;h3&gt;Complexe ou compliqué ?&lt;/h3&gt;

&lt;p&gt;J&amp;#39;ai enquêté sur une fonction particulière, assez longue, qui vérifie la présence d&amp;#39;un élément particulier. Cet élément varie en fonction du type de page que l&amp;#39;on teste.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;format_is_present&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bt&#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtl&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bc&#39;&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:space&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ei0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ep0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ib&#39;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ebib&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ic&#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;bc&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ifw&#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;bc&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ift&#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wf&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ir&#39;&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:space&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;en&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ise&#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;bm&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;iso&#39;&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:space&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ep0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ise&#39;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ebt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ebt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;et&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;it&#39;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtl&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Format &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; Not yet implemented&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pending&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Score flog : 135.8. &lt;/p&gt;

&lt;p&gt;Vraiment pas terrible, mais le nombre de cas différents ne simplifie pas la tâche.&lt;/p&gt;

&lt;h4&gt;Premier essai : Yaml et algorithme&lt;/h4&gt;

&lt;p&gt;J&amp;#39;ai commencé par créer un fichier yaml contenant toutes les informations des tests, pour n&amp;#39;avoir ensuite qu&amp;#39;un algorithme commun à tous les cas.&lt;/p&gt;

&lt;p&gt;Voici le code ruby de la fonction ainsi modifié:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;format_is_present_with_yaml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;_&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Get checkers from the yaml&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;CONTROLS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;YAML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;support/checkers.yml&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;controls&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;checks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CONTROLS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# extra command&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;extra&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;extra&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sleep&#39;&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;extra&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;scroll&#39;&lt;/span&gt;
                    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:space&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;extra&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;both&#39;&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:space&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# Check in a frame is slightly different&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;in_frame&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;in_frame&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# Make the control&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;class&quot;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;result&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;result&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Format &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; Not yet implemented&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pending&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Score flog : 75.3. Score presque divisé par deux : impressionnant. &lt;/p&gt;

&lt;p&gt;Par contre, contrairement à la première fonction :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Une partie du raisonnement est déporté dans un fichier externe. Si je ne le poste pas, il est impossible de savoir ce que fait l&amp;#39;algo.&lt;/li&gt;
&lt;li&gt;Si de nouveaux cas apparaissent, il faudra peut être modifié ce nouvel algorithme, ce qui peut être risqué et ajouter des effets de bords.&lt;/li&gt;
&lt;li&gt;Franchement, lisez le code : c&amp;#39;est beaucoup moins clair que la fonction précédente. La gestion des cas particuliers représente la plus grande part du code, noyant complétement la compréhension.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Un compromis&lt;/h4&gt;

&lt;p&gt;Autre solution, regrouper les différents cas par lots similaires. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;format_is_present_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;ib&#39;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ebib&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;ic&#39;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bc&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;ifw&#39;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bc&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;ir&#39;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;en&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;is&#39;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ep0&#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;ift&#39;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;wf&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;is&#39;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bm&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;ise&#39;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/e(|b)t/&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# generic cases with element by id&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ib&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ic&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ifw&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ir&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;is&#39;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(ir is)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# generic cases but with scroll&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:space&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# generic cases with element by class&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;is&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ift&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ise&#39;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# particular cases&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bt&#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtl&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bc&#39;&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:space&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ei0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ep0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;intab&#39;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;divs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wtl&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Format &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; Not yet implemented&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pending&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quelques détails :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;J&amp;#39;ai regroupé en fonction du type d&amp;#39;element à vérifier : les div filtrés par id, ceux filtrés par class, puis tous les autres cas particuliers.&lt;/li&gt;
&lt;li&gt;En écrivant cet article, j&amp;#39;ai trouvé une petite amélioration qui baisse la note flog de quelques points supplémentaires.&lt;/li&gt;
&lt;li&gt;Ajouter des nouveux cas sera trivial. Le code reste parfaitement lisible, même pour quelqu&amp;#39;un découvrant le projet.&lt;/li&gt;
&lt;li&gt;Le score est toujours au dessus de la zone grise, mais je suis à cours d&amp;#39;idée. Pour le moment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Score flog final : 76.4. Il était de 85 quand j&amp;#39;ai commencé à écrire cet article : merci à vous d&amp;#39;avoir été mon &lt;a href=&quot;http://fr.wikipedia.org/wiki/M%C3%A9thode_du_canard_en_plastique&quot;&gt;canard en plastique&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Petits plaisirs de la vie</title>
   <link href="http://blog.fabricebournisien.eu///2015/01/07/petits-plaisirs-de-la-vie/"/>
   <updated>2015-01-07T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2015/01/07/petits-plaisirs-de-la-vie</id>
   <content type="html">&lt;p&gt;L&amp;#39;année 2014 a été &lt;a href=&quot;/2014/09/09/bonne-annee-2014/&quot;&gt;longue et difficile&lt;/a&gt;. Les vacances de Noël ont failli être du même ordre :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Un dimanche à chercher un médecin de garde, pour une bronchite traitée qui a dégénéré.&lt;/li&gt;
&lt;li&gt;Une soirée aux urgences pédiatriques pour mon fils avec ses 39.7°C, une nuit à l&amp;#39;hopital, pour pneumopathie.&lt;/li&gt;
&lt;li&gt;Une rechute pour mon père, avec infection pulmonaire, un traitement assez lourd.&lt;/li&gt;
&lt;li&gt;La moitié de la famille touchée par une gastro... qui finalement a été &amp;quot;légère&amp;quot; avec à peine une journée chacun de &amp;quot;moins bien&amp;quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Avec tout ce qui s&amp;#39;est passé, j&amp;#39;apprécie d&amp;#39;autant plus les petits bonheurs de la vie :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Toute la famille a pu passer le réveillon du 25 ensemble, et tous les enfants se sont éclatés. Mon fils a adoré distribuer les paquets à tout le monde.&lt;/li&gt;
&lt;li&gt;Mon père va mieux, et devrait enfin rentrer à la maison dans les prochaines semaines. Depuis le printemps, ca commençait à faire long.&lt;/li&gt;
&lt;li&gt;La neige, qui est bien tombée juste après Noël, pour la faire découvrir aux petits. Mais sans gêner la circulation pour autant.&lt;/li&gt;
&lt;li&gt;La première bêtise de mon fils (un premier janvier). Sur le coup, je n&amp;#39;étais pas content. Mais maintenant, ça fera un chouette souvenir. Nous aider au restaurant et faire tomber une assiette pleine...&lt;/li&gt;
&lt;li&gt;Mon fils se met à vouloir manger comme les grands. Il passe donc de &amp;quot;je ne mange que les plats pour bébés&amp;quot;, sans vouloir gouter aux plats préparés avec amour par sa mère à &amp;quot;je ne veux manger que comme mes parents&amp;quot;.&lt;/li&gt;
&lt;li&gt;Mon fils qui accepte enfin de varier les gouts de ses yaourts.&lt;/li&gt;
&lt;li&gt;Mon fils qui a fait des progrès énormes dans l&amp;#39;apprentissage du langage. On devine les phrases, on comprend de plus en plus de mots, et il se met à répéter tout ce qu&amp;#39;on dit.&lt;/li&gt;
&lt;li&gt;Mon fils qui semble bien comprendre qu&amp;#39;il y aura bientôt un bébé de plus dans la maison.&lt;/li&gt;
&lt;li&gt;La grossesse de ma femme, qui avance doucement et surement.&lt;/li&gt;
&lt;li&gt;Mon travail, où j&amp;#39;ai assez de temps pour pouvoir effectuer des modifications importantes qui me tiennent à coeur. Et où l&amp;#39;équipe travaille &amp;quot;enfin&amp;quot; en harmonie.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les petits plaisirs de la vie font mon bonheur. N&amp;#39;oubliez jamais vos petits plaisirs.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>KISS : Keep it simple and stupid</title>
   <link href="http://blog.fabricebournisien.eu///2014/12/13/kiss-simple-et-efficace/"/>
   <updated>2014-12-13T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2014/12/13/kiss-simple-et-efficace</id>
   <content type="html">&lt;p&gt;Quand on travaille sur des gros projets, on a tendance à rajouter beaucoup de fonctions, de code, partout, à tout bout de champ.
Il faut savoir prendre du recul, pour simplifier le code, et faire des choses simples et efficaces.&lt;/p&gt;

&lt;p&gt;Dans le cadre de mon travail, l&amp;#39;équipe test a pas mal changé cet été, avec 2 nouveaux arrivants. Ca tombe bien, on a aussi récupéré des nouveaux projets à tester.
C&amp;#39;est en les formant à nos méthodes, notre code, que j&amp;#39;ai repéré des améliorations à faire, et qu&amp;#39;ils ont fait des suggestions intéressantes.&lt;/p&gt;

&lt;p&gt;Avec leur arrivée, une partie de ma charge de travail a pu diminuer un peu, me permettant de réflechir, de me poser des questions, de chercher des idées &amp;quot;innovantes&amp;quot; pour résoudre des problèmes mis de côté par manque de temps depuis des semaines (voire plus).&lt;/p&gt;

&lt;h3&gt;Mise en place en 3 clics&lt;/h3&gt;

&lt;p&gt;Bon, j&amp;#39;éxagère, il faut plus que 3 clics. L&amp;#39;utilisation d&amp;#39;un Gemfile et de la gem &lt;a href=&quot;https://rubygems.org/gems/bundler&quot;&gt;bundler&lt;/a&gt; permet de simplifier l&amp;#39;ensemble de la procédure.&lt;/p&gt;

&lt;p&gt;Pour préparer un nouveau poste (suite à une embauche, une réinstallation, ou un nouveau serveur, il faut alors installer ruby, la gem bundler, récupérer le dépôt du code, puis lancer juste la commande &lt;code&gt;bundle install&lt;/code&gt;. 
Et le tour est joué.&lt;/p&gt;

&lt;p&gt;Pour aller plus loin : mise en place sur tous les serveurs de tests d&amp;#39;une routine vérifiant que la liste est à jour et conforme à ce qu&amp;#39;on attend, avec un &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;bundle update
gem cleanup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;L&amp;#39;information, le nerf de la guerre&lt;/h3&gt;

&lt;p&gt;Plongés dans les tests, nous disposions de plusieurs documentations, avec des buts plus ou moins précis. Localisées à plusieurs endroits.
Du coup, petit ménage d&amp;#39;été, pour les regrouper, classer, mettre à jour. Au final, on a gardé plusieurs documents, pour plusieurs rôles différents :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Documentation du code&lt;/strong&gt; : présente depuis le début, avec génération automatique par la gem ruby &lt;a href=&quot;https://rubygems.org/gems/rdoc&quot;&gt;rdoc&lt;/a&gt; et un petit script ruby (basé sur des expressions régulières) pour lister les step_definitons. Basée évidemment sur les commentaires dans le code, qui sont eux mêmes le premier niveau d&amp;#39;explication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation sur comment coder&lt;/strong&gt; : quelques documents précis sur comment installer l&amp;#39;environnement, les conventions de codage, ou des points précis et complexe des tests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation sur les produits&lt;/strong&gt; : nous testons une demie douzaine de projets, plus ou moins liés les uns avec les autres. Pour pouvoir teter efficacement, il vaut mieux savoir comment le projet fonctionne, et dans l&amp;#39;idéal, connaître également les bugs les plus courants sur le projet.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Codes complexes et compliqués&lt;/h3&gt;

&lt;p&gt;Aujourd&amp;#39;hui, l&amp;#39;ensemble de nos codes testant les projets de la société représenter environ 11 000 lignes de codes (essentiellement en ruby, cucumber, shell)&lt;/p&gt;

&lt;p&gt;Il y a 10 jours, j&amp;#39;ai regardé pour la première fois depuis des mois les résultats de &lt;a href=&quot;https://rubygems.org/gems/flog&quot;&gt;flog&lt;/a&gt; sur le projet. 
Pour résumer, flog analyse le code source, compte combien de fois on effectue chaque &amp;quot;action&amp;quot;, et s&amp;#39;ensuit une note de complexité pour chaque méthode, et pour l&amp;#39;ensemble.&lt;/p&gt;

&lt;p&gt;Comme on peut classer, on voit immédiatement les fonctions les plus compliquées. Reste à savoir si la complexité est normale ou non. Après avoir lu pas mal d&amp;#39;articles sur le sujet, et testé moi même sur notre code, j&amp;#39;estime qu&amp;#39;une fonction avec un score supérieur à 50 doit être analysée, et éventuellement, modifiée.&lt;/p&gt;

&lt;h4&gt;Quelques chiffres&lt;/h4&gt;

&lt;p&gt;J&amp;#39;ai profité d&amp;#39;un &amp;quot;temps calme&amp;quot; au bureau pour bosser sur le sujet. &lt;/p&gt;

&lt;p&gt;Avant :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;  7128.5: flog total
    15.6: flog/method average

   793.5: main#none
   236.1: main#launch_browser
   197.0: main#get_job_results
   138.0: Then#/^HTML (contain|don&#39;t contain) (.*)$/
   136.7: Then#/^I don&#39;t see errors$/
   134.8: FormatPage#format_is_present
   131.1: main#compare_stats
    90.7: Then#/^I click on the insocial expand$/
    81.4: main#stats_of_day
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Après : &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt; 6166.2: flog total
    13.8: flog/method average

   827.4: main#none
   197.0: main#get_job_results
   168.0: main#launch_browser
   134.8: FormatPage#format_is_present
    90.7: Then#/^I click on the insocial expand$/
    90.3: main#compare_stats
    77.0: main#stats_of_day
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On note plusieurs choses :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;La note globale a chuté (-14%). &lt;/li&gt;
&lt;li&gt;Cela fait mathématiquement baissé la moyenne par méthode.&lt;/li&gt;
&lt;li&gt;Certaines méthodes &amp;quot;complexes&amp;quot; ont bien baissé.&lt;/li&gt;
&lt;li&gt;D&amp;#39;autres ont augmenté : avec les pull request de mes collègues, rien d&amp;#39;aberrant. La note a donc baissé alors que dans le même temps, plus de 1 500 lignes de code ont été ajoutées / modifiées.&lt;/li&gt;
&lt;li&gt;Certaines méthodes, complexes, ont une note qui correspond à leur difficulté de compréhension. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Qu&amp;#39;est ce que j&amp;#39;ai changé ?&lt;/h4&gt;

&lt;p&gt;Rien de transcendant :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Du code dupliqué a été &amp;quot;mis en commun&amp;quot; pour faciliter la maintenance.&lt;/li&gt;
&lt;li&gt;Des optimisations faciles : par exemple, dans une méthode utilisant beaucoup de données, j&amp;#39;ai remplacé l&amp;#39;utilisation d&amp;#39;un tableau par une copie du contenu d&amp;#39;une données. Passer de &lt;code&gt;my_array[&amp;#39;result&amp;#39;][&amp;#39;report&amp;#39;][&amp;#39;url&amp;#39;]&lt;/code&gt; à &lt;code&gt;my_url&lt;/code&gt; quand c&amp;#39;est utilisé 7-8 fois, ça améliore la complexité et aussi la lisibilité et la maintenabilité.&lt;/li&gt;
&lt;li&gt;Des méthodes ont été découpées pour clarifier ce que le code faisait.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Et c&amp;#39;est conventionnel tout ça ?&lt;/h3&gt;

&lt;p&gt;En parralèle, j&amp;#39;ai mis à jour la gem &lt;a href=&quot;https://rubygems.org/gems/rubocop&quot;&gt;rubocop&lt;/a&gt;. Cette gem permet de vérifier que toutes les conventions sont respectées. La liste des choses vérifiées s&amp;#39;est beaucoup étoffée depuis la dernière fois que j&amp;#39;avais mis à jour la gemme (de 0.18.1 à 0.27.1), et j&amp;#39;ai passé quelques heures à modifier notre code pour qu&amp;#39;il passe les nouvelles règles.&lt;/p&gt;

&lt;p&gt;Sur le projet, nous avons désactivé 27 règles parmi les centaines présentes. Par exemple, nous désactivons la limite sur le calcul de &lt;a href=&quot;http://fr.wikipedia.org/wiki/Nombre_cyclomatique&quot;&gt;complexité cyclomatique&lt;/a&gt; puisque nous utilisons flog.&lt;/p&gt;

&lt;p&gt;Rubocop nous a aussi aidé sur la complexité : une nouvelle règle a fait remonté quelques variables non utilisés. Les supprimer à fait baisser les notes de flog.&lt;/p&gt;

&lt;p&gt;Pour l&amp;#39;automatisation, un git-hooks lance un script shell :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vérifiant le résultat de rubocop, &lt;/li&gt;
&lt;li&gt;vérifiant qu&amp;#39;il ne reste pas de trace d&amp;#39;un conflit dans les fichiers,&lt;/li&gt;
&lt;li&gt;vérifiant que tous les fichiers yaml sont syntaxiement juste (&lt;code&gt;find . -name *.yml -exec yaml-lint {} \;&lt;/code&gt; pour les analyser, avec la gem &lt;a href=&quot;https://rubygems.org/gems/yaml-lint&quot;&gt;yaml-lint&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;KISS, et après&lt;/h3&gt;

&lt;p&gt;Le &lt;a href=&quot;http://fr.wikipedia.org/wiki/Principe_KISS&quot;&gt;principe KISS&lt;/a&gt; (pour Keep it simple and stupid) est une façon de travailler qui incite à rester simple pour être efficace.
Certains points cités plus hauts ne sont pas triviaux à mettre en place, mais permettent sur le long terme à limiter les risques, à garder facilement du code propre, compréhensible, et simple.&lt;/p&gt;

&lt;p&gt;Ma todolist pour la suite ? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Traquer le code dupliqué (j&amp;#39;en ai déjà repéré quelques morceaux, dont le nettoyage n&amp;#39;était pas possible dans le temps que j&amp;#39;avais), &lt;/li&gt;
&lt;li&gt;Supprimer le code mort et non utilisé.&lt;/li&gt;
&lt;li&gt;Continuer à documenter, ranger, classer.&lt;/li&gt;
&lt;li&gt;Refactoriser ce qui peut l&amp;#39;être et dont le code n&amp;#39;est pas amené à disparaître dans les prochains mois.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Bonne année 2014</title>
   <link href="http://blog.fabricebournisien.eu///2014/09/09/bonne-annee-2014/"/>
   <updated>2014-09-09T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2014/09/09/bonne-annee-2014</id>
   <content type="html">&lt;p&gt;Il y a des années qui sont très bonnes, pleines de bonnes choses.
Pour moi, la référence, c&amp;#39;était 2009 : je me suis marié, nous avons acheté notre appartement, changé de voiture, ma femme a trouvé un travail.&lt;/p&gt;

&lt;p&gt;Il y a des années, où c&amp;#39;est moins bon, mais qui ne sont pas mauvaises.&lt;/p&gt;

&lt;p&gt;Et après, il y a des années où la poisse s&amp;#39;acharne. 
Pour moi, cette année noire, c&amp;#39;est 2014. 
Pour résumer, sur les 250 jours de l&amp;#39;année déjà passés, ma famille a compté pas loin de 300 jours d&amp;#39;hospitalisation.
A tout ceci s&amp;#39;ajoute le fait que j&amp;#39;habite loin de mes familles, et que la communication n&amp;#39;est pas toujours simple.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Janvier 2014 : Décès de ma belle-mère. Même si elle n&amp;#39;était pas en super santé, cela a surpris tout le monde. Ma femme était effondrée. (Et j&amp;#39;étais pas beaucoup mieux)&lt;/li&gt;
&lt;li&gt;Janvier 2014 : Mon père subit des examens pour un problème cardiaque. Avec stents. Posés avec complications.&lt;/li&gt;
&lt;li&gt;Février 2014 : Ma filleule entre en urgence à l&amp;#39;hôpital, et est placée en coma artificiel le temps de faire les examens, pour éviter qu&amp;#39;elle souffre. Une petite fille de 5 mois passe donc 15 jours dans le coma.&lt;/li&gt;
&lt;li&gt;Mars 2014 : Fin du coma, difficile et longue adaptation. Elle est clairement traumatisée, elle a peur des gens habillés en gris, etc...&lt;/li&gt;
&lt;li&gt;Mars 2014 : Au boulot, j&amp;#39;ai l&amp;#39;impression que rien ne va. Je mets ça sur le compte de mes ennuis familiaux.&lt;/li&gt;
&lt;li&gt;Avril 2014 : Mon père gagne un double pontage, en &amp;quot;urgence&amp;quot;, avec plus d&amp;#39;un mois d&amp;#39;avance sur la date prévue.&lt;/li&gt;
&lt;li&gt;Avril 2014 : Je continue de cloisonner entre boulot et perso, mettant tout mon stress sur le compte du personnel.&lt;/li&gt;
&lt;li&gt;Avril 2014 : Mon père gagne un nouveau pontage.&lt;/li&gt;
&lt;li&gt;Avril 2014 : J&amp;#39;explique la situation à mes chefs, qui commençaient à se demander pourquoi j&amp;#39;étais aussi sur les nerfs. On réalise que l&amp;#39;effectif du pole qualité n&amp;#39;est pas suffisant. Contre mon avis, on privilégie des solutions pratiques plutôt qu&amp;#39;une embauche.&lt;/li&gt;
&lt;li&gt;Avril 2014 : On ajoute une chirurgie exploratoire abdominale sur mon père.&lt;/li&gt;
&lt;li&gt;Mai 2014 : Amputation de la jambe pour mon père. &lt;/li&gt;
&lt;li&gt;Mai 2014 : Sudweb me donne une bouffée d&amp;#39;air.&lt;/li&gt;
&lt;li&gt;Juin 2014 : Je revois mon père pour la première fois de l&amp;#39;année. Il est dans un tel état que j&amp;#39;ai l&amp;#39;impression de lui dire adieu.&lt;/li&gt;
&lt;li&gt;Juillet 2014 : Lors d&amp;#39;une sortie entre collègues organisée par ma société, blessure de mon binôme. Je suis donc seul là où on ne suffisait pas à deux.&lt;/li&gt;
&lt;li&gt;Juillet 2014 : Nouvel opération de mon père, pour &amp;quot;fignoler&amp;quot; l&amp;#39;amputation.&lt;/li&gt;
&lt;li&gt;Juillet 2014 : On fait passer des entretiens pour embaucher du monde au pole qualité.&lt;/li&gt;
&lt;li&gt;Aout 2014 : Au boulot, on me propose une mutation. De Toulouse à Montpellier. (5 personnes à Toulouse, 40 à Montpellier)&lt;/li&gt;
&lt;li&gt;Aout 2014 : Vacances. Repos, pas d&amp;#39;internet (ou si peu). Je me repose, j&amp;#39;oublie tout.&lt;/li&gt;
&lt;li&gt;Aout 2014 : Ma femme est très fatiguée, malade.&lt;/li&gt;
&lt;li&gt;Aout 2014 : J&amp;#39;apprends qu&amp;#39;une de mes tantes va mieux : elle a eu un AVC avec complications, alors qu&amp;#39;elle avait déjà une santé fragile. &lt;/li&gt;
&lt;li&gt;Aout 2014 : Premier jour de boulot, lorsque je prends ma voiture, quelqu&amp;#39;un a laissé un mot pour s&amp;#39;excuser pour la bosse. Ma portière s&amp;#39;est faite enfoncer durant la nuit.&lt;/li&gt;
&lt;li&gt;Aout 2014 : Deuxième semaine de reprise : chute de mon fils de sa hauteur à plat dos, on fini aux urgences. Il ne pose plus son pied par terre, et ne peut donc plus marcher. Ils nous font surveiller les symptômes d&amp;#39;un traumatisme crânien.&lt;/li&gt;
&lt;li&gt;Aout 2014 : Mon fils ne marche toujours pas 2 jours après, passage chez le médecin. Qui nous dit de patienter, puis de passer une échographie du genou.&lt;/li&gt;
&lt;li&gt;Aout 2014 : Ma meilleure amie passe aux urgences suite à un problème de santé pendant ses vacances.&lt;/li&gt;
&lt;li&gt;Aout 2014 : Avec l&amp;#39;arrivée d&amp;#39;un nouveau testeur qui code des tests auto, je ressens d&amp;#39;autant plus le manque de code pour moi. En regardant en arrière, j&amp;#39;ai du coder en tout et pour tout 15 jours depuis janvier. (Le reste, c&amp;#39;est du test à la main, dont 75% au moins peut être automatisé)&lt;/li&gt;
&lt;li&gt;Aout 2014 : Ma meilleure amie retourne à l&amp;#39;hôpital pour quelques jours après son retour de vacances.&lt;/li&gt;
&lt;li&gt;Septembre 2014 : &amp;Eacute;chographie négative pour le genou de mon fils, retour aux urgences. Cette fois, on est fixé (10 jours après)&amp;nbsp;: il ne pose pas le pied par terre parce qu&amp;#39;il a une fracture du tibia (Fracture en cheveu, compliquée à voir sur une radio). C&amp;#39;est parti pour un plâtre pendant 3 semaines.&lt;/li&gt;
&lt;li&gt;Septembre 2014 : Ma femme est toujours malade, mais on est maintenant sûrs&amp;nbsp;: on va être parents une deuxième fois.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quand je racontais un point particulier à quelqu&amp;#39;un, on me disait toujours &amp;quot;Courage, ça va passer&amp;quot;. Quand je vois la liste, je comprends mieux pourquoi, deux semaines après mon retour de vacances, j&amp;#39;ai l&amp;#39;impression de passer à côté de ma vie depuis quelques mois.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;J&amp;#39;ai un travail, où je devrais faire mon métier. Pourtant, j&amp;#39;ai l&amp;#39;impression de ne pas faire mon métier.&lt;/li&gt;
&lt;li&gt;J&amp;#39;ai une famille, que je ne vois pas aussi souvent que je voudrais.&lt;/li&gt;
&lt;li&gt;J&amp;#39;ai un fils, et j&amp;#39;ai l&amp;#39;impression de ne pas le voir grandir.&lt;/li&gt;
&lt;li&gt;J&amp;#39;ai une vie, mais je ne sais pas où elle me mène.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Changement de blog</title>
   <link href="http://blog.fabricebournisien.eu///2014/07/05/changement-de-blog/"/>
   <updated>2014-07-05T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2014/07/05/changement-de-blog</id>
   <content type="html">&lt;p&gt;Depuis quelques semaines, j&amp;#39;avais envie de changer d&amp;#39;air pour mon blog : voir de nouvelles technologies, d&amp;#39;avoir un blog plus professionnel.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai pas mal fouillé, et je suis très tenté par &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; et &lt;a href=&quot;https://github.com/poole/poole&quot;&gt;Poole&lt;/a&gt;, qui permettent d&amp;#39;avoir facilement un site statique écrit en markdown. Le tout hébérgé par github.&lt;/p&gt;

&lt;p&gt;Plusieurs objectifs à ce changement :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Etre encore plus maître de mon outil de publication.&lt;/li&gt;
&lt;li&gt;Découvrir de nouvelles technologies.&lt;/li&gt;
&lt;li&gt;En profiter pour faire le ménage sur le blog.&lt;/li&gt;
&lt;li&gt;Remettre à plat la ligne éditoriale.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Sudweb 2014 - Un grand bol d'air frais</title>
   <link href="http://blog.fabricebournisien.eu///2014/05/20/sudweb-2014-grand-bol-d-air-frais/"/>
   <updated>2014-05-20T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2014/05/20/sudweb-2014-grand-bol-d-air-frais</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://sudweb.fr/&quot;&gt;Sudweb&lt;/a&gt;, j&amp;#39;en avais parlé il y a 2 ans, en 2012. Cette année, ça se passait à Toulouse, j&amp;#39;y suis donc retourné. Le changement, c&amp;#39;est que j&amp;#39;y étais uniquement en tant que &amp;quot;spectateur&amp;quot;.&lt;/p&gt;

&lt;h3&gt;Vendredi : des conférences et des papotages&lt;/h3&gt;

&lt;p&gt;Le vendredi, c&amp;#39;est le jour des conférences. Je ne les citerais pas toutes, mais certaines m&amp;#39;ont bien marqué :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;La culture d&amp;#39;entreprise, vu par Kevin Goldsmith. 
J&amp;#39;ai eu un peu du mal à tout suivre en anglais de bon matin, mais intéressant, et finalement, cette notion de culture est revenu dans beaucoup d&amp;#39;interventions.&lt;/li&gt;
&lt;li&gt;La sédimentation des données, par Samuel Huron&lt;/li&gt;
&lt;li&gt;Comment afficher simplement des données dans le temps, de façon que le présent compte plus que le passé. Hate de pouvoir tester ça sur l&amp;#39;affichage des résultats de tests.&lt;/li&gt;
&lt;li&gt;Un cours de dessin de croquis par Eva-Lotta Lamm&lt;/li&gt;
&lt;li&gt;Deux petites histoires sur pourquoi les commentaires dans le code sont importants&lt;/li&gt;
&lt;li&gt;Tu peux pas test, un concept pour tester. J&amp;#39;étais sceptique sur le programme, mais Vincent Van Steen a finalement réussi à me convaincre que cette méthode peut avoir un intérêt dans certains cas, pour gagner du temps et de l&amp;#39;argent.&lt;/li&gt;
&lt;li&gt;Une histoire de print qui finit en web, avec un joli livre responsive ; la dette technique ; les réponses aux stress... et plein d&amp;#39;autres sujets ont été abordés.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Comme toujours, la journée est chargée en contenu riches, intéressants, et chacun y trouve son compte. Les pauses sont là pour échanger sur les conférences, sur soi, son métier... je suis timide, j&amp;#39;ai surtout parler à des gens que je connaissais déjà.&lt;/p&gt;

&lt;p&gt;Et pour finir la journée, une conférence débat animée par David Bruant et Pablo Pernot, qui a soulevé beaucoup de questions à base de &amp;quot;mais pourquoi je travaille comme ça&amp;quot;, &amp;quot;comment changer l&amp;#39;avenir de la profession&amp;quot;, ou encore &amp;quot;quand ça va pas, il faut le dire&amp;quot;.&lt;/p&gt;

&lt;p&gt;Toute la journée, Romain a réalisé des posters basés sur les contenus des conférences, en live. J&amp;#39;ai trouvé ça impressionnant (que ce soit l&amp;#39;esprit de synthèse ou la mise en page) Sur le débat, il a été bluffant. J&amp;#39;ai hâte de voir le résultats des posters dans les prochaines semaines !
Le soir, j&amp;#39;ai fait l&amp;#39;impasse sur la soirée communautaire pour rentrer m&amp;#39;occuper de mon fils, et me reposer avant le deuxième round du lendemain.
Sudweb 2014 - Un grand bol d&amp;#39;air frais&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2014/sudweb.png&quot; alt=&quot;SudWeb Logo&quot; title=&quot;Sudweb&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Samedi : ateliers et échanges&lt;/h3&gt;

&lt;p&gt;Le samedi à Sudweb, c&amp;#39;est souvent compliqué : des ateliers sont préparés dans les 7-8 salles dispos, et chacun va là où il veut. Avec la règle des deux pieds : &amp;quot;Si ça te plait pas, tu pars, et tu vas voir ailleurs&amp;quot;.
Cette année, j&amp;#39;avais un coup de coeur pour un atelier prévu de longue date. Du coup, cela m&amp;#39;a empêché d&amp;#39;aller à un autre qui s&amp;#39;est créé et organisé dans la matinée. Et du coup, j&amp;#39;ai fini par faire une journée sans &amp;quot;technique&amp;quot; :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Atelier Légo pour faire des métaphores, étape par étape. Très intéressant, parce que cela permet vraiment de faire passer des idées par construction en 3D. (Un peu comme le cours de croquis de la veille)&lt;/li&gt;
&lt;li&gt;Atelier DIY : Do it yourself, avec construction par équipe. Mon seul regret : nous n&amp;#39;avons pas eu le temps de finir le device lab à base de tablette que nous avions commencé. Mais clairement, je suis arrivé en regardant mon bureau d&amp;#39;une autre façon lundi matin.&lt;/li&gt;
&lt;li&gt;Un atelier de travail en groupe avec une kinésiologue, où on a aussi bien parlé acuponcture que de nos frustrations professionnelles.&lt;/li&gt;
&lt;li&gt;Et enfin, la rétrospective de sudweb. Avec toute l&amp;#39;équipe qui a organisé ça, pour pouvoir dire ce qui nous a plus, ce qui a moins plus, et ce qu&amp;#39;on pourrait faire d&amp;#39;encore meilleurs l&amp;#39;année prochaine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Sudweb, et après&lt;/h3&gt;

&lt;p&gt;Rien à dire, j&amp;#39;ai passé 2 supers journées. Je pense que si je pouvais, je ne changerais pas grand chose : j&amp;#39;y étais allé pour avoir un grand bol d&amp;#39;air, entendre parler de quelques technos que je maîtrise pas forcément, et m&amp;#39;ouvrir l&amp;#39;esprit à d&amp;#39;autres choses. J&amp;#39;ai tout bon sur toute la ligne. Un grand coup de chapeau à l&amp;#39;équipe qui a organisé tout ça.&lt;/p&gt;

&lt;p&gt;Et après ? Lundi, retour au bureau, à la réalité. Le coup de boost de voir autant de gens voulant travailler encore mieux (dans tous les sens du terme) pendant 2 jours m&amp;#39;a remonté le moral. Mardi, j&amp;#39;ai un bon coup de blues, et je me demande si on devrait pas organiser un sudweb chaque semaine.&lt;/p&gt;

&lt;p&gt;Il ne reste qu&amp;#39;à attendre les vidéos des conférences pour pouvoir les partager avec les collègues et connaissances pour leur montrer :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>L'allié du testeur &#58; l'affichage synthétique</title>
   <link href="http://blog.fabricebournisien.eu///2014/02/10/l-allie-du-testeur-l-affichage-synthetique/"/>
   <updated>2014-02-10T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2014/02/10/l-allie-du-testeur-l-affichage-synthetique</id>
   <content type="html">&lt;p&gt;Comme beaucoup de gens, je travaille toujours sur plusieurs projets à la fois. Mon rôle principal est de créer et maintenir des tests fonctionnels automatiques.&lt;/p&gt;

&lt;p&gt;Pour gérer tout cela, nous sommes 2 personnes. Mais nous avons aussi des tests manuels à faire avant chaque mise en production de chaque projet.&lt;/p&gt;

&lt;h3&gt;Quelques chiffres&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;6 serveurs jenkins : 3 linux, 3 windows. (Uniquement pour les tests fonctionnels)&lt;/li&gt;
&lt;li&gt;1 700 scenarios cucumber joués quotidiennement. (soit plus de 20 heures chaque jour)&lt;/li&gt;
&lt;li&gt;près de 300 jobs jenkins pour les ranger&lt;/li&gt;
&lt;li&gt;7 produits principaux, à tester sur 1 à 3 navigateurs + mobile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cela donne le tournis. Plus le temps passe, plus j&amp;#39;ai besoin d&amp;#39;avoir un affichage synthétique pour savoir si mes tests sont passés ou non.&lt;/p&gt;

&lt;p&gt;J&amp;#39;avais dans le passé créer un petit plugin pour &lt;a href=&quot;http://web-quality.over-blog.com/affichage-des-resultats-de-tests&quot;&gt;afficher mes résultats&lt;/a&gt;. Mais chaque projet est légèrement différent, demande des réglages différents, et j&amp;#39;arrivais aux limites de cet affichage. J&amp;#39;avais un écran par projet, soit 7 écrans de contrôle, que j&amp;#39;aurais voulu avoir toujours sous la main.&lt;/p&gt;

&lt;h3&gt;Plugin jenkins&lt;/h3&gt;

&lt;p&gt;J&amp;#39;ai donc regardé sur jenkins s&amp;#39;il existait des plugins permettant de lister les résultats au format json. Je n&amp;#39;ai rien trouvé de concluant, j&amp;#39;ai donc codé un petit plugin pour avoir un fichier jsonp qui liste tous les jobs, et pour chacun :
* son statut courant,
* les stats du dernier résultat,
* l&amp;#39;avancement s&amp;#39;il est en cours...
Vous pouvez trouver le code sur le &lt;a href=&quot;https://github.com/fabrice31/jsonResult&quot;&gt;dépôt github&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Console en javascript&lt;/h3&gt;

&lt;p&gt;Une fois le json obtenu, il restait à le traiter. L&amp;#39;avantage est de pouvoir le faire en javascript, ce qui permet à chacun de gérer ensuite l&amp;#39;avantage à sa sauce. J&amp;#39;ai fait un écran de contrôle pour l&amp;#39;ensemble des projets que je gère.&lt;/p&gt;

&lt;p&gt;Et j&amp;#39;ai filé les clefs à une équipe sur un projet, qui a modifié l&amp;#39;écran pour avoir seulement les tests fonctionnels de son projet, et a ajouté les tests unitaires sur le même écran.
Et voilà ce que ça donne :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2014/jenkins-show.png&quot; alt=&quot;Jenkins show&quot; title=&quot;Ecran d&amp;#39;affichage jenkins&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On peut séparer les jobs dans les différents projets via des expressions régulières.&lt;/li&gt;
&lt;li&gt;Pour l&amp;#39;un des projets, très conséquents, j&amp;#39;ai même séparé par navigateur.&lt;/li&gt;
&lt;li&gt;On voit bien les tests KO pour chaque job. (en rouge)&lt;/li&gt;
&lt;li&gt;Les jobs désactivés ou n&amp;#39;ayant pas de résultats sont gris.&lt;/li&gt;
&lt;li&gt;Les jobs qui sont en cours d&amp;#39;exécution sont en bleu, avec une barre d&amp;#39;avancement sur leur durée estimée.&lt;/li&gt;
&lt;li&gt;Les jobs qui seront lancés quand il y aura une place pour eux ont une pastille jaune.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Comment j'ai changé de travail sans bouger de ma chaise</title>
   <link href="http://blog.fabricebournisien.eu///2013/11/05/comment-j-ai-change-de-travail-sans-bouger-de-ma-chaise/"/>
   <updated>2013-11-05T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/11/05/comment-j-ai-change-de-travail-sans-bouger-de-ma-chaise</id>
   <content type="html">&lt;p&gt;Cela fait plusieurs années que j&amp;#39;assure la qualité d&amp;#39;overblog.com :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tests et validation &amp;quot;manuel&amp;quot; pendant des années,&lt;/li&gt;
&lt;li&gt;Gestion du support utilisateur par forum ou par mail,&lt;/li&gt;
&lt;li&gt;Mise en place des tests fonctionnels automatiques,&lt;/li&gt;
&lt;li&gt;Mise en place des changelog,&lt;/li&gt;
&lt;li&gt;Rôle de proxy Product Owner lorsque l&amp;#39;équipe est passé à Scrum,&lt;/li&gt;
&lt;li&gt;A l&amp;#39;occasion, j&amp;#39;ai aussi développé des fonctionnalités sur le projet lui-même,&lt;/li&gt;
&lt;li&gt;Et plein d&amp;#39;autres petites tâches pour assurer la qualité en général...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En début d&amp;#39;année, lors de mon entretien annuel avec ma hiérarchie, j&amp;#39;ai sous-entendu que je commençais à &amp;quot;m&amp;#39;ennuyer&amp;quot; : je n&amp;#39;avais plus assez de défis à me mettre sous la dent.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai aussi demandé des rendez-vous à quelques reprises avec mon &amp;quot;n+2&amp;quot;, pour lui exposer des problèmes d&amp;#39;organisation, et aussi mon ressenti sur le produit et sa qualité. (Je n&amp;#39;aime pas l&amp;#39;appeler mon &amp;quot;n+2&amp;quot;, mais c&amp;#39;est plus simple pour en parler ici. Il mérite beaucoup plus que cela : il est à l&amp;#39;écoute, et chaque fois je sors de réunion &amp;quot;prêt à en découdre&amp;quot;.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/les-aventuriers-de-l-arche-perdue.jpg&quot; alt=&quot;Comment j&amp;#39;ai changé de travail sans bouger de ma chaise&quot;&gt;&lt;/p&gt;

&lt;h3&gt;A la recherche du Graal de l&amp;#39;emploi&lt;/h3&gt;

&lt;p&gt;A ce moment-là, j&amp;#39;ai mis à jour mon CV, mes informations sur les réseaux, et je suis passé en mode veille &amp;quot;un peu plus active&amp;quot; sur l&amp;#39;emploi dans mon domaine.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai rapidement découvert plusieurs choses :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;J&amp;#39;ai acquis au sein de ma société une autorité &amp;quot;naturelle&amp;quot; dans le domaine de la Qualité, et des tests.&lt;/li&gt;
&lt;li&gt;J&amp;#39;ai une autonomie très importante pour faire mon travail, et j&amp;#39;aime ça !&lt;/li&gt;
&lt;li&gt;Les postes dédiées à la qualité et/ou aux tests ne courent pas les rues&lt;/li&gt;
&lt;li&gt;Certains postes dans le domaine ne me conviennent pas&lt;/li&gt;
&lt;li&gt;Se limiter à une région géographique limite encore plus les offres&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J&amp;#39;ai du coup pensé à changer de carrière pour rester dans ma région, mais je n&amp;#39;avais pas envie de redevenir développeur &amp;quot;lambda&amp;quot; (et qu&amp;#39;on ne me parle pas de chef de projet). Je me suis même demandé pourquoi je restais dans l&amp;#39;informatique (quand je dis que je ratisse, je ratisse large).&lt;/p&gt;

&lt;p&gt;Au printemps, j&amp;#39;allais au travail avec un peu moins d&amp;#39;entrain, et avec le recul, je me suis aperçu que je me faisais des montagnes de certains petits tracas sans importance. Mais hors de question pour moi de partir sans savoir où aller.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/vecurent-heureux-quality.jpg&quot; alt=&quot;Comment j&amp;#39;ai changé de travail sans bouger de ma chaise&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Le casse du siècle ?&lt;/h3&gt;

&lt;p&gt;Et puis, au début de l&amp;#39;été, on m&amp;#39;a fait une proposition intéressante :
* Mettre en place des tests automatiques sur des projets web
* Travailler en binôme avec quelqu&amp;#39;un déjà en place
* Travailler sur 5 ou 6 projets web distincts (mais ayant des parties communes)
* Toucher à des domaines que je ne maîtrise pas : faire des tests sur du flash ou des applications mobiles, de beaux défis !
* Accompagner les équipes techniques pour améliorer la Qualité
Ce poste paraissait trop beau pour être vrai, mais il était pourtant parfait pour moi. OverBlog fait partie du groupe Ebuzzing depuis plusieurs années. Ebuzzing diffuse un certains nombre de projets. Depuis cet été, j&amp;#39;assure maintenant la qualité de tous ces projets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/evaluation.jpg&quot; alt=&quot;Ils vécurent heureux et eurent beaucoup de tests&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Ils vécurent heureux et eurent beaucoup d&amp;#39;enfants&lt;/h3&gt;

&lt;p&gt;Depuis, j&amp;#39;ai un nouveau travail.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Je n&amp;#39;ai pas changé de bureau. Je suis toujours assis au même endroit, avec mes habitudes.&lt;/li&gt;
&lt;li&gt;Mon &amp;quot;n+2&amp;quot; est toujours le même. Pour moi, c&amp;#39;est vraiment une bonne chose : j&amp;#39;ai appris à l&amp;#39;apprécier, et à le respecter depuis longtemps.&lt;/li&gt;
&lt;li&gt;Je n&amp;#39;ai pas changé de collègues, mais la liste des collègues avec qui je travaille s&amp;#39;est allongée.&lt;/li&gt;
&lt;li&gt;Si depuis longtemps je codais &amp;quot;propre&amp;quot; et réutilisable sans même avoir besoin de le faire, depuis cet été je le met en pratique. Le temps &amp;quot;perdu&amp;quot; pour cela a &amp;quot;enfin&amp;quot; été rentabilisé.&lt;/li&gt;
&lt;li&gt;Travailler en binôme est stimulant. Il ne se passe pas une semaine sans qu&amp;#39;une idée de l&amp;#39;un de nous fasse rebondir l&amp;#39;autre pour affronter un problème particulier.&lt;/li&gt;
&lt;li&gt;Former mon binôme à mes méthodes de travail est intéressant. Il me permet de voir que certains choix ne sont pas forcément pertinents et logiques. Au bout de 4 mois, j&amp;#39;ai déjà repéré plusieurs fois que l&amp;#39;un finissait la phrase de l&amp;#39;autre : juste parfait à mes yeux.&lt;/li&gt;
&lt;li&gt;Pouvoir chaque jour travailler sur un projet différent est génial : je n&amp;#39;ai plus de routine (les habitudes sont ma hantise)&lt;/li&gt;
&lt;li&gt;Même si mon autonomie n&amp;#39;est pas aussi importante qu&amp;#39;avant, j&amp;#39;en ai quand même beaucoup. C&amp;#39;est plus que suffisant. (je connais beaucoup de gens qui voudraient avoir la moitié de celle que j&amp;#39;ai)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/keep-quality.jpg&quot; alt=&quot;Keep calm and pick quality&quot; title=&quot;Keep quality&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Bug de l'espace temps</title>
   <link href="http://blog.fabricebournisien.eu///2013/10/17/bug-de-l-espace-temps/"/>
   <updated>2013-10-17T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/10/17/bug-de-l-espace-temps</id>
   <content type="html">&lt;p&gt;Dans notre outil, nous utilisons le langage twig. Cela permet une grande flexibilité, et d&amp;#39;avoir un moteur déjà bien robuste.&lt;/p&gt;

&lt;p&gt;Prenons par exemple l&amp;#39;affichage d&amp;#39;une date avec ce code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Default date format&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notre outil étant mutli langue, et les formats de date changeant avec la langue, nous utilisons une locale. En pratique, il s&amp;#39;agit d&amp;#39;une chaîne de caractères indiquant le format.&lt;/p&gt;

&lt;p&gt;On pourrait avoir HH:mm pour l&amp;#39;heure par exemple.&lt;/p&gt;

&lt;p&gt;Dans l&amp;#39;analyse du bug du jour, nous avons un signalement de date fausse sur certaines pages. Après vérifications nous trouvons une page datant du 3 janvier 2010, mais qui est affichée comme étant le 3 janvier 2009.&lt;/p&gt;

&lt;p&gt;L&amp;#39;enquête se poursuit en vérifiant les dates des autres pages : la quasi totalité des pages affichent une date juste. On finit par regrouper les pages à problèmes suivant le critères : certaines pages de début janvier de certaines années (mais pas toutes).&lt;/p&gt;

&lt;p&gt;Le collègue qui cherchait a trouvé le problème.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MMMM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dans la documentation de datel, Y = year of &amp;quot;Week of Year&amp;quot;. Il s&amp;#39;agit de l&amp;#39;année durant laquelle le week end du jour en question a eu lieu.&lt;/p&gt;

&lt;p&gt;Il s&amp;#39;agit donc d&amp;#39;un bug visible pour les premiers jours de janvier pour lesquels la semaine commençait l&amp;#39;année d&amp;#39;avant. Tordu non ?&lt;/p&gt;

&lt;p&gt;Pour la petite histoire, le code corrigé sans bug donne :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MMMM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yyyy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Affichage des résultats de tests</title>
   <link href="http://blog.fabricebournisien.eu///2013/06/17/affichage-des-resultats-de-tests/"/>
   <updated>2013-06-17T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/06/17/affichage-des-resultats-de-tests</id>
   <content type="html">&lt;p&gt;Lorsqu&amp;#39;on teste avec jenkins, cucumber et watir, on obtient des rapports détaillés, qu&amp;#39;il faut lire et analyser en permanence.&lt;/p&gt;

&lt;p&gt;Depuis plusieurs mois, nous avons dans nos locaux une télé dédiée à l&amp;#39;affichage de l&amp;#39;état général de l&amp;#39;ensemble de nos tests. Pour cela, le plugin Jenkins Wall Display nous a suffit dans un premier temps. Nous affichons sur la télé une page web qui fait défiler&lt;/p&gt;

&lt;p&gt;Au total, sur ces écrans, nous affichons le résumé :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plus de 1 300 test php unit (et leur 5 000 assertions)&lt;/li&gt;
&lt;li&gt;Près de 500 tests unitaires JS&lt;/li&gt;
&lt;li&gt;Plus de 950 scénarios cucumber pour les tests fonctionnels.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En outre, nous affichons aussi quelques graphiques sensibles de l&amp;#39;état de la production : nombre de compte crées, etc..
On a beau regrouper toutes ces informations, il arrive un moment où l&amp;#39;affichage n&amp;#39;est plus lisible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/screen-avant.jpg&quot; alt=&quot;Exemple avec les tests fonctionnels&quot; title=&quot;Affichage avant les travaux&quot;&gt;&lt;/p&gt;

&lt;p&gt;Le constat est moins alarmant pour les tests unitaires. Les chiffres exposent bien pourquoi :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tests fonctionnels : 40 jobs jenkins * 3 navigateurs&lt;/li&gt;
&lt;li&gt;Tests unitaires : 18 jobs jenkins * 2 environnement&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Comment afficher proprement les résultats&lt;/h3&gt;

&lt;p&gt;Je suis parti en quête d&amp;#39;une solution pour afficher tous nos résultats proprement, avec quelques contraintes :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Je préférais afficher tous les résultats sur un seul écran par type de tests&lt;/li&gt;
&lt;li&gt;Je veux pouvoir afficher un résumé ( x tests KO / x tests total)&lt;/li&gt;
&lt;li&gt;Je veux pouvoir séparer facilement les affichages d&amp;#39;un même type de tests (par navigateur / environnement)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ma quête fut longue et semée d&amp;#39;embûches :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tentative d&amp;#39;utilisation de l&amp;#39;API, mais c&amp;#39;était déjà trop lent alors que je ne calculais / affichais pas la moitié de ce que je voulais (45 secondes environ)&lt;/li&gt;
&lt;li&gt;Plusieurs plugin jenkins, mais aucun ne permettant ce que je veux&lt;/li&gt;
&lt;li&gt;Un Plugin jenkins faisant la moitié de ce que je voulais, mais complètement bugué&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Mon premier plugin jenkins&lt;/h3&gt;

&lt;p&gt;Je suis donc parti à l&amp;#39;assaut de la documentation de jenkins pour coder un plugin fait-maison qui ferait exactement ce que je voudrais.&lt;/p&gt;

&lt;p&gt;Ce que j&amp;#39;ai bien aimé dans cette création :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tout en java. Je n&amp;#39;avais pas codé en java depuis 10 ans je pense, et j&amp;#39;ai perdu, mais vite repris mes repères.&lt;/li&gt;
&lt;li&gt;Bosser sur un plugin que je pourrais diffuser en open-source à la fin :)&lt;/li&gt;
&lt;li&gt;La possibilité de faire exactement ce que je veux, sans être limité par un plugin déjà fait.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ce que je n&amp;#39;ai pas aimé :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;La documentation : elle existe, elle semble complète. Mais je trouve l&amp;#39;organisation moyennement bonne. J&amp;#39;ai plusieurs fois été à la recherche d&amp;#39;exemple de code pour trouver la fonction dont j&amp;#39;avais besoin, que je ne trouvais pas dans la doc.&lt;/li&gt;
&lt;li&gt;L&amp;#39;installation de maven qui marche du premier coup sur un de mes postes, mais se passe mal sur l&amp;#39;autre.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Au final, ça donne quoi ?&lt;/h3&gt;

&lt;p&gt;J&amp;#39;ai donc un plugin qui permet de créer une nouvelle &amp;quot;View&amp;quot;. On peut y configurer :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Les noms des colonnes, et la façon de filtrer les jobs dans chaque colonne, par des expression régulières.&lt;/li&gt;
&lt;li&gt;Affichage dans chaque colonne du temps pris pour ces tests, du nombre de scénarios en échec et du nombre total de scénarios. (Afficher le nombre de jobs est beaucoup plus simple, mais donne beaucoup moins d&amp;#39;informations : un job en échec pour 1 / 34 est moins grave qu&amp;#39;un test avec 4 / 4 erreurs)&lt;/li&gt;
&lt;li&gt;Affichage de la liste des jobs en échec (avec le nombre de scénarios)&lt;/li&gt;
&lt;li&gt;Une colonne à part, qui affiche le temps total sur jenkins (master + slave)&lt;/li&gt;
&lt;li&gt;Une liste de jobs spéciaux (dans mon cas : ceux qui lancent les autres, la génération de la doc...)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le plugin est sur github : &lt;a href=&quot;https://github.com/fabrice31/CucumberJenkins&quot;&gt;https://github.com/fabrice31/CucumberJenkins&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Et maintenant ?&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai configuré le plugin pour fonctionner avec cucumber, puisque je suis au coeur des tests fonctionnels. Il faut maintenant que je me débrouille pour que cet affichage fonctionne aussi bien avec tests php unit (séparés par des regexp par environnement cette fois)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/screen-apres.jpg&quot; alt=&quot;Affichage de résultats cucumber&quot; title=&quot;Affichage apres les travaux&quot;&gt;
&lt;img src=&quot;/public/pictures/2013/screen-config.jpg&quot; alt=&quot;Plugin jenkins affichage de résultats cucumber&quot; title=&quot;Configuration du plugin&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ruby - OAuth v1.0a pour optimiser les tests</title>
   <link href="http://blog.fabricebournisien.eu///2013/06/10/ruby-oauth-v1.0a-pour-optimiser-les-tests/"/>
   <updated>2013-06-10T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/06/10/ruby-oauth-v1.0a-pour-optimiser-les-tests</id>
   <content type="html">&lt;p&gt;Lors de tests, il arrive souvent qu&amp;#39;on ait besoin de &amp;quot;faire le ménage&amp;quot; pour retrouver un état comme à l&amp;#39;origine.
Plusieurs stratégies possibles, en fonction des technologies qu&amp;#39;on souhaite utiliser.&lt;/p&gt;

&lt;h3&gt;Un par un, à la fin&lt;/h3&gt;

&lt;p&gt;Après chaque scénario, supprimer ce qui a été ajouté, annuler les modifications une par une.&lt;/p&gt;

&lt;p&gt;Avantages : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facile à mettre en place (on réutilise ce qui a déjà été fait)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Défauts : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Si le scénario plante, on ne remet pas en l&amp;#39;état&lt;/li&gt;
&lt;li&gt;Chaque scénario prend un peu plus de temps (jusqu&amp;#39;au double, dans le pire des cas)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Un par un, au début&lt;/h3&gt;

&lt;p&gt;Avant chaque scénario, remettre les valeurs par défauts pour le test&lt;/p&gt;

&lt;p&gt;Avantages :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facile à mettre en place (on réutilise ce qui a déjà été fait)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Défauts :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Si la remise à zéro ne marche pas, on ne teste pas&lt;/li&gt;
&lt;li&gt;Chaque scénario prend un peu plus de temps (jusqu&amp;#39;au double, dans le pire des cas)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Tous d&amp;#39;un coup, dans une routine à part&lt;/h3&gt;

&lt;p&gt;Puisqu&amp;#39;on utilise un outil comme jenkins pour organiser tous les tests, on peut ajouter une routine &amp;quot;à part&amp;quot;, qui va se connecter sur chaque compte pour effectuer cette remise à zéro.&lt;/p&gt;

&lt;p&gt;Avantages :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Toutes les procédures de remises à zéro sont au même endroit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Défauts :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Un peu plus long à mettre en place&lt;/li&gt;
&lt;li&gt;Demande d&amp;#39;ajouter une sécurité pour ne pas la lancer au mauvais moment&lt;/li&gt;
&lt;li&gt;Ca prend du temps (mais autant que de le faire un par un)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Optimisation : utilisation d&amp;#39;une API&lt;/h3&gt;

&lt;p&gt;Dans mon cas, nous disposons aussi d&amp;#39;une API publique (en alpha, elle n&amp;#39;est pas encore ouverte à tout le monde)&lt;/p&gt;

&lt;p&gt;Avantages :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pas d&amp;#39;interface web, cela devrait aller plus vite&lt;/li&gt;
&lt;li&gt;Ajoutera &amp;quot;en passant&amp;quot; des tests sur la public API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Défauts :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Je ne maitrise pas du tout Oauth 1.0a (ça me permettra d&amp;#39;apprendre : tant mieux)&lt;/li&gt;
&lt;li&gt;Nous disposons d&amp;#39;un SDK pour faciliter l&amp;#39;utilisation de l&amp;#39;API, en php. Pour des raisons pratiques, je préfère le faire en ruby, le serveur de tests étant déjà configuré pour cela. Je pars donc &amp;quot;de zéro&amp;quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Utiliser une API OAuth 1.0a en Ruby&lt;/h3&gt;

&lt;p&gt;On trouve un peu de documentation pour le faire, et quelques exemples. Quelques remarques sur ces articles :
* La quasi totalité expose le même code d&amp;#39;exemple.
* Rares sont ceux qui signalent la version d&amp;#39;OAuth
* Les exemples se concentrent beaucoup sur &amp;quot;comment se connecter à l&amp;#39;api&amp;quot;, et très rarement sur &amp;quot;comment l&amp;#39;utiliser&amp;quot;&lt;/p&gt;

&lt;p&gt;Voilà quelques astuces pour utiliser &amp;quot;rapidement&amp;quot; une API OAuth en ruby&lt;/p&gt;

&lt;h4&gt;Utilisation de gems&lt;/h4&gt;

&lt;p&gt;Elles facilitent la vie, autant en profiter.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;oauth&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;watir-webdriver&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;json&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Définition de constantes de l&amp;#39;api&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;OB_API_SERVER&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;http://url_server_api&#39;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OB_API_BASE_URL&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OB_API_SERVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/public/0.1&#39;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OB_API_ENDPOINT_REQUEST_TOKEN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/oauth/request_token&#39;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OB_API_ENDPOINT_ACCESS_TOKEN&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/oauth/access_token&#39;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OB_API_ENDPOINT_AUTHORIZE&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/oauth/authorize&#39;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OB_API_MY_CONSUMER_KEY&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;######&#39;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OB_API_MY_CONSUMER_SECRET&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;######&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obtenir la connexion à l&amp;#39;API&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# create the OAuth consumer&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OAuth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
    &lt;span class=&quot;no&quot;&gt;OB_API_MY_CONSUMER_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;OB_API_MY_CONSUMER_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:oauth_version&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;1.0a&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:site&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OB_API_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:request_token_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OB_API_ENDPOINT_REQUEST_TOKEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:access_token_path&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OB_API_ENDPOINT_ACCESS_TOKEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:authorize_path&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OB_API_ENDPOINT_AUTHORIZE&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# show all debugs in console&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# @consumer.http.set_debug_output($stdout)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# get the authorize url&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@request_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@consumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_request_token&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Make as if the user authorize the app&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# If you make a web app, you should show the link to your user, and let it click it&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# browse the authorize url&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@request_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authorize_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# connect with account&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;email&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test@test.fr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;passwd&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;monmotdepasse&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;loginSubmit&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;click&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# give access&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;submit&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# get verifier token&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# browser url contain oauth_verifier_token&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_verifier_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;oauth_verifier=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# grant total access&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@access_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@request_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:oauth_verifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oauth_verifier_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# no more browser needed&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Exemples d&amp;#39;utilisation de l&amp;#39;API OAuth&lt;/h4&gt;

&lt;p&gt;Une fois qu&amp;#39;on est connecté à l&amp;#39;API, on peut l&amp;#39;utiliser. Il faut lire sa documentation, en général assez touffue, pour savoir ce qu&amp;#39;on peut faire (lister / ajouter / modifier / supprimer).
Voici deux exemples &amp;quot;simplifiés&amp;quot; pour mon exemple.&lt;/p&gt;

&lt;h5&gt;Classique&lt;/h5&gt;

&lt;p&gt;Afficher les informations sur le blog courant.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get_url_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;OB_API_BASE_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/blog/info&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;current_blog_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_url_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Avec une option&lt;/h5&gt;

&lt;p&gt;Afficher la liste des titres des articles en brouillons.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get_lists_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OB_API_BASE_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/blog/posts/draft?limit=20&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;content_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_lists_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# read json results&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;response&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conclusions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ma routine journalière prenait environ 55 minutes. La nouvelle routine, via l&amp;#39;api, dure environ 90 secondes.&lt;/li&gt;
&lt;li&gt;J&amp;#39;ai depuis très envie de l&amp;#39;étendre pour ajouter de nouvelles procédures de remises à zéro.&lt;/li&gt;
&lt;li&gt;La documentation est primordiale (que ce soit celle de l&amp;#39;API ou celle de OAuth)&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Comment organiser les tests sur le long terme</title>
   <link href="http://blog.fabricebournisien.eu///2013/04/22/comment-organiser-les-tests-sur-le-long-terme/"/>
   <updated>2013-04-22T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/04/22/comment-organiser-les-tests-sur-le-long-terme</id>
   <content type="html">&lt;h3&gt;Exécuter une partie des tests&lt;/h3&gt;

&lt;p&gt;Les scénarios sont taggués pour être lancé par jenkins par la commande : &lt;code&gt;cucumber --tag @montag&lt;/code&gt;
Cela permet de ne lancer qu&amp;#39;une partie des tests. (voir &amp;quot;&lt;a href=&quot;http://web-quality.over-blog.com/tester-sur-plusieurs-navigateurs&quot;&gt;Tester sur plusieurs navigateurs&lt;/a&gt;&amp;quot; pour les détails)&lt;/p&gt;

&lt;h3&gt;Serveurs&lt;/h3&gt;

&lt;p&gt;Côté serveur, nous avons 2 serveurs jenkins.
Le principal, une grosse machine debian quadri core, qui exécute jusqu&amp;#39;à 3 jobs en même temps.&lt;/p&gt;

&lt;p&gt;Ensuite, un serveur Windows, avec un jenkins &amp;quot;slave&amp;quot;.
L&amp;#39;esclave reçoit ses ordres du maître, qui lui demande d’exécuter des jobs particuliers.
Il est sous Windows pour pouvoir les exécuter sur Internet Explorer.&lt;/p&gt;

&lt;p&gt;Pour éviter les effets de bords entre les tests sur IE, pas de solution. On vide donc les cookies, le cache, etc à la fermeture d&amp;#39;Internet Explorer.
On ne peut donc pas exécuter les tests pour IE en parallèle sur le même serveur : les sessions se mélangeraient.&lt;/p&gt;

&lt;h3&gt;Quelques chiffres&lt;/h3&gt;

&lt;p&gt;Les scenarios sont regroupés en feature, dont le temps d&amp;#39;execution est de maximum 10 minutes. Dans Jenkins on a 38 &amp;quot;jobs&amp;quot; sur FF (+ 34 sur IE)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Chaque jour : 323 scénarios / 2693 step =&amp;gt; 3h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IE&lt;/strong&gt; (1 fois par semaine actuellement, 1 fois par jour bientôt)&lt;/p&gt;

&lt;p&gt;Chaque jour : 302 scénarios / 2527 step =&amp;gt; 4h 30&lt;/p&gt;

&lt;p&gt;Cela représente 227 500 scénarios par an (pour 2 737 heures de tests).&lt;/p&gt;

&lt;p&gt;Sans oublier les lancements à la demande de certains jobs.&lt;/p&gt;

&lt;h4&gt;Comptes utilisateurs&lt;/h4&gt;

&lt;p&gt;Du côté des scénarios, ils utilisent pour le moment 70 comptes utilisateurs différents (avec des options particulières, etc...)&lt;/p&gt;

&lt;p&gt;Un changement prochain de notre offre me fait penser que les tests auront besoin de 100 comptes d&amp;#39;ici 2 à 3 semaines.&lt;/p&gt;

&lt;p&gt;Sans oublier de dupliquer tout ça pour nos 2 environnements (test / stable)&lt;/p&gt;

&lt;p&gt;Ni d&amp;#39;ajouter l&amp;#39;exécution de ces tests sur chrome.&lt;/p&gt;

&lt;p&gt;Et on ajoute des tests fonctionnels en dehors de ce schéma, pour tester des choses particulière, que ce soit en production sur des points essentiels ou la validité de données particulières.&lt;/p&gt;

&lt;p&gt;Et vous, combien vous testez ?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Des tests automatiques avec contenus aléatoires</title>
   <link href="http://blog.fabricebournisien.eu///2013/04/13/des-tests-automatiques-avec-contenus-aleatoires/"/>
   <updated>2013-04-13T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/04/13/des-tests-automatiques-avec-contenus-aleatoires</id>
   <content type="html">&lt;p&gt;Si vous avez plusieurs tests qui s’exécutent en même temps sur le même environnement (le serveur de test), il faut veiller à bien tester la &amp;quot;bonne chose&amp;quot;.&lt;/p&gt;

&lt;p&gt;Prenons un exemple de deux tests exécutés en même temps :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@scenario1&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pseudo&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;Given&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pseudo&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nickname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pseudo-tmp&quot;&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publish&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test pseudo-tmp&quot;&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;published&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pseudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pseudo-tmp&quot;&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@scenario2&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Pseudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cannot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publish&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;Given&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pseudo&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nickname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publish&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test pseudo&quot;&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;published&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pseudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pseudo&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si les 2 scénarios se terminent &amp;quot;au même moment&amp;quot;, nous aurons sur la page de contrôle 2 articles. L&amp;#39;un signé avec &amp;quot;pseudo-tmp&amp;quot;, et l&amp;#39;autre avec &amp;quot;pseudo&amp;quot;.&lt;/p&gt;

&lt;p&gt;Si la vérification vérifie dans tout le contenu de la page des publications et pas seulement le dernier élément, cela pourrait bien se passer.&lt;/p&gt;

&lt;p&gt;A un détail près :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A 10h, le test s’exécute, il fonctionne.&lt;/li&gt;
&lt;li&gt;A 15h, le test s’exécute mais les articles parus à 10h sont peut-être toujours affichés. On aura donc bien un article &amp;quot;test pseudo&amp;quot; sur la page alors qu&amp;#39;un bug sera présent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ma solution : &lt;strong&gt;ajouter de l&amp;#39;aléatoire dans les tests&lt;/strong&gt;.
Avant chaque scénario, je crée un token, composé de :
* 2 lettres du navigateur (ff, ie, ch..)
* un nombre aléatoire.
Et je l&amp;#39;affiche en console (bien pratique pour débugguer)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Before&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Token for this test : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;sr&quot;&gt;/* je vous fais grace du code pour lancer le navigateur, ... */&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;End&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ma classe Token :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Use to got random value&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Useful to post a data with random string but keep the value to check it later&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Author:: Fabrice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Token&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Create a new token&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Author:: Fabrice&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;BROWSER&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}#{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Get the value of the last token&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Author:: Fabrice&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;value&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@value&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ensuite, sans modifier le scénario, on modifie le code des étapes. Lorsqu&amp;#39;on sauve une donnée, on ajoute le token &amp;quot;courant&amp;quot; dans le champ.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Et côté vérification, on en tient compte également.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open_article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;click&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;click&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Parfois, on a besoin de pouvoir jouer &amp;quot;sans token&amp;quot; pour des points bien précis : on prévoit alors un paramètre pour s&amp;#39;en passer. (Exemple, pour la saisie d&amp;#39;un email)&lt;/p&gt;

&lt;p&gt;Ce genre de solution peut aussi vous éviter des effets de bords si vous publiez sur le même compte des articles avec le même titre. (Ceci, c&amp;#39;est un autre test à part entière)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>L'armée ne paie pas toujours ses militaires</title>
   <link href="http://blog.fabricebournisien.eu///2013/04/02/l-armee-paie-ses-militaires-ou-pas/"/>
   <updated>2013-04-02T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/04/02/l-armee-paie-ses-militaires-ou-pas</id>
   <content type="html">&lt;p&gt;Il y a plusieurs mois, j&amp;#39;avais tweeté &amp;quot;Les bugs, ça coûte cher : Noël sans solde pour des milliers de soldats français&amp;quot;&lt;/p&gt;

&lt;p&gt;Source : &lt;a href=&quot;http://www.lemonde.fr/international/article/2012/12/21/des-milliers-de-soldats-francais-non-payes-a-cause-d-un-bug-informatique_1809606_3210.html&quot;&gt;http://www.lemonde.fr/international/article/2012/12/21/des-milliers-de-soldats-francais-non-payes-a-cause-d-un-bug-informatique&lt;em&gt;1809606&lt;/em&gt;3210.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pour résumer : dans les anciens logiciels de paie des militaires français, il y avait parfois des petites erreurs, des petits bugs, qui étaient corrigés les mois suivants. Mais en 2012, mise à jour complète du logiciel.&lt;/p&gt;

&lt;h2&gt;Louvois, le logiciel le plus buggué de l&amp;#39;histoire ?&lt;/h2&gt;

&lt;p&gt;La dernière version du logiciel, surnommée &amp;quot;Louvois&amp;quot; (Logiciel unique à vocation interarmées de la solde) , est tellement remplie de bugs que certains militaires ont de légers problèmes. (Exemples en fin d&amp;#39;article)&lt;/p&gt;

&lt;p&gt;Il y a un mois, on pouvait lire dans la presse que les bugs devaient être corrigés pour Noël 2012, mais ne l&amp;#39;étaient pas encore mi février 2013.&lt;/p&gt;

&lt;p&gt;Source : &lt;a href=&quot;http://www.lemagit.fr/technologie/applications/applications-transversales-pgi/2013/02/20/logiciel-de-paie-louvois-la-guerre-de-le-drian-est-loin-detre-gagnee/&quot;&gt;http://www.lemagit.fr/technologie/applications/applications-transversales-pgi/2013/02/20/logiciel-de-paie-louvois-la-guerre-de-le-drian-est-loin-detre-gagnee/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On envisagerait donc de revenir à l&amp;#39;ancien logiciel, moins buggué. Mais cela prendrait entre 12 et 14 mois, donc, mi 2014 au mieux.&lt;/p&gt;

&lt;p&gt;Une autre source indique que l&amp;#39;armée de l&amp;#39;air paierait déjà ses hommes via un autre logiciel pour éviter les bugs : &lt;a href=&quot;http://www.marianne.net/blogsecretdefense/Louvois-l-armee-de-Terre-pourrait-revenir-a-l-ancien-systeme-de-paiement-des-soldes_a942.html&quot;&gt;http://www.marianne.net/blogsecretdefense/Louvois-l-armee-de-Terre-pourrait-revenir-a-l-ancien-systeme-de-paiement-des-soldes_a942.html&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Les erreurs occasionnées par Louvois représentent 1 % de la masse salariale du ministère de la Défense, pour près de 120 000 incidents
&lt;em&gt;Le Canard Enchaîné&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Et pendant ce temps, dans l&amp;#39;armée de terrain&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Saisie sur salaire à un miliaire, pour une somme déjà payée au trésor public par le militaire par ailleurs. (Donc, il est dans le rouge, et paie 2 fois). Temps avant remboursement : plusieurs mois.&lt;/li&gt;
&lt;li&gt;Un homme qui doit faire vivre sa famille un mois entier avec 60 euros : &lt;a href=&quot;http://storify.com/fabrice31/l-armee-mauvais-payeur&quot;&gt;http://storify.com/fabrice31/l-armee-mauvais-payeur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Soldes payées avec des mois de retard sur le terrain&lt;/li&gt;
&lt;li&gt;Primes prévues mais reportées, payées avec plusieurs mois de retard...&lt;/li&gt;
&lt;li&gt;Sur une compagnie de 120 hommes, pour le même mois, déjà plus de 20 cas recensés avec une erreur sur le solde, de 150 à 1 400 €. (La cause serait la prime versée le mois précédent, considérée comme un trop perçu par le logiciel)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si des militaires veulent poursuivre la liste, n&amp;#39;hésitez pas, je compléterai avec plaisir cette liste de bugs. (un formulaire de contact anonyme est disponible en bas de page)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/armee-francaise1.jpg&quot; alt=&quot;L&amp;#39;armée ne paie pas toujours ses militaires.&quot; title=&quot;L&amp;#39;armée, quel beau métier&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Et si c&amp;#39;était vous ?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Rappel&lt;/strong&gt; : les militaires n&amp;#39;ont pas le droit de manifester / faire grève...&lt;/p&gt;

&lt;p&gt;Imaginez, si cela ne touchait pas l&amp;#39;armée, mais une société lambda ?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Une société privée avec un bug aussi important (même une seule fois) qui ne corrige pas dans les jours qui suivent la situation de tous les salariés : que diront les prud&amp;#39;hommes ?&lt;/li&gt;
&lt;li&gt;Une société qui a un bug dans 1% des paies qu&amp;#39;elle verse, Sur une petite PME de 20 personnes, cela fait 1 seule erreur de paie tous les 5 mois. 2.5 erreurs par an.&lt;/li&gt;
&lt;li&gt;Pour l&amp;#39;armée, ça représente 3220 personnes par mois. (322 000 emplois en 2007)&lt;/li&gt;
&lt;li&gt;Imaginez, si ce mois-ci, votre conjoint(e) reçoit un salaire de 60 € à cause d&amp;#39;une erreur de logiciel, et la suite viendra &amp;quot;plus tard&amp;quot;, délai non confirmé. De quoi vous passez vous ? Payer votre loyer, vos crédits ? Les couches de bébé ?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Une page facebook parlait en 2012 du problème : &lt;a href=&quot;Le%20paquet%20de%20gauloises%20en%20col%C3%A8re%5D&quot;&gt;https://www.facebook.com/pages/Un-paquet-de-Gauloises/416293095105059&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Quand un commerçant en ligne a des bugs</title>
   <link href="http://blog.fabricebournisien.eu///2013/03/18/quand-un-commercant-en-ligne-a-des-bugs/"/>
   <updated>2013-03-18T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/03/18/quand-un-commercant-en-ligne-a-des-bugs</id>
   <content type="html">&lt;p&gt;On peut être un grand nom de la vente en ligne, mais avoir malgré cela des problèmes sur son site web.&lt;/p&gt;

&lt;p&gt;Parfois, cela se passe &amp;quot;presque bien&amp;quot; : tout le monde se souvient encore de l&amp;#39;homme nu de La Redoute (une photo présentant un produit avec en fond un homme nu). Tout le monde a rigolé, s&amp;#39;est moqué d&amp;#39;eux. Ils ont corrigé le tir, puis ont lancé un jeu pour trouver certains objets dans d&amp;#39;autres images pour les gagner.&lt;/p&gt;

&lt;h3&gt;Et parfois, c&amp;#39;est le &amp;quot;drame&amp;quot;&lt;/h3&gt;

&lt;p&gt;Prenons un cas pratique, qui m&amp;#39;est arrivé.&lt;/p&gt;

&lt;p&gt;Je suis client chez &lt;a href=&quot;boulanger.fr&quot;&gt;http://www.boulanger.fr/&lt;/a&gt; depuis longtemps, j&amp;#39;ai une carte de fidelité, etc. En janvier, j&amp;#39;ai rencontré des difficultés pour utiliser un chèque cadeau sur une commande. J&amp;#39;ai contacté leur support par un formulaire par mail : aucune nouvelle.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai tweeté : une cm m&amp;#39;a demandé une copie du mail et m&amp;#39;a confirmé avoir transférée ma demande à l&amp;#39;équipe technique. Au menu : des problèmes d&amp;#39;ergonomie, de textes pas clairs...&lt;/p&gt;

&lt;p&gt;Ce week-end, j&amp;#39;ai reçu un mail pour me dire que mon chèque cadeau n&amp;#39;était pas utilisé. Petit tour sur mon espace client, quelques soucis rencontrés en quelques minutes.&lt;/p&gt;

&lt;h3&gt;Les commandes fantômes&lt;/h3&gt;

&lt;p&gt;Page &amp;quot;Commandes en cours&amp;quot;, j&amp;#39;ai deux commandes notées &amp;quot;expédiées&amp;quot; :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Celle de fin novembre. Que j&amp;#39;ai reçue en décembre, sans souci.&lt;/li&gt;
&lt;li&gt;Celle de janvier. Que j&amp;#39;ai reçue (en deux fois, l&amp;#39;un des articles était indisponible. J&amp;#39;ai été averti de l&amp;#39;indisponibilité, j&amp;#39;ai choisi d&amp;#39;attendre : 5 semaines avant la livraison)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;La saisie impossible (d&amp;#39;un chèque cadeau)&lt;/h3&gt;

&lt;p&gt;Pour saisir un chèque cadeau, quelques étapes :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Validez votre panier&lt;/li&gt;
&lt;li&gt;Au milieu de la page de paiement, cochez oui à la phrase &amp;quot;Vous béneficiez de cartes cadeau, cartes satisfaction ou chèques fidélité ?&amp;quot;&lt;/li&gt;
&lt;li&gt;Sélectionnez &amp;quot;Chèque cadeau&amp;quot;.&lt;/li&gt;
&lt;li&gt;Pour les férus d&amp;#39;accessibilité : c&amp;#39;est un div. (L&amp;#39;image de fond est appliqué au div parent)&lt;/li&gt;
&lt;li&gt;Pour les férus de webperf : l&amp;#39;image est chargée 2 fois, avec 2 adresses différentes.&lt;/li&gt;
&lt;li&gt;Saisissez le numéro du chèque (copier / coller, en faisant attention aux espaces)&lt;/li&gt;
&lt;li&gt;Saisissez le montant du chèque (Apparement, Boulanger ne connait pas le montant en fonction du numéro de chèque...) 
Attention, pas de format indiqué : 25,10 / 25.10 / 25€10 : bonne chance.&lt;/li&gt;
&lt;li&gt;Recopiez un captcha&lt;/li&gt;
&lt;li&gt;Validez le chèque&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/boulanger-saisie-cheque.jpg&quot; alt=&quot;8 moyens de paiements. +1 caché&quot;&gt;&lt;/p&gt;

&lt;p&gt;Voilà, la page se recharge, referme la partie chèque, et vous passez à la suite. Oui, mais :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Si tout va bien, la ligne pour le chèque figure en bas de la page d&amp;#39;après ce qu&amp;#39;ils disent.&lt;/li&gt;
&lt;li&gt;Si une erreur s&amp;#39;est produite, vous devez :

&lt;ul&gt;
&lt;li&gt;Au milieu de la page de paiement, il faut cocher à nouveau la phrase &amp;quot;Vous béneficiez de cartes cadeau, cartes satisfaction ou chèques fidélité ?&amp;quot;&lt;/li&gt;
&lt;li&gt;Sélectionner &amp;quot;Chèque cadeau&amp;quot;.&lt;/li&gt;
&lt;li&gt;Regarder si par hasard, une ligne rouge n&amp;#39;est pas affichée. Avec un message d&amp;#39;erreur du genre &amp;quot;Le paiement n&amp;#39;est pas valide&amp;quot;. Bonne chance pour comprendre quelle est l&amp;#39;erreur. Si vous tapez le montant &amp;quot;AA&amp;quot; ou un numéro de chèque erroné, vous aurez la même erreur.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/boulanger-saisie-cheque2.jpg&quot; alt=&quot;Un message d&amp;#39;erreur (enfin, façon de parler)&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Vous avez demandé le service client, ne quittez pas&lt;/h3&gt;

&lt;p&gt;En bas de page, un lien contact : je me dis que je vais leur expliquer ce que je pense de leur site.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Je clique sur le lien en bas de page&lt;/li&gt;
&lt;li&gt;Une page apparaît avec une liste de 8 &amp;quot;services&amp;quot; pour les contacter. Je clique sur &amp;quot;Contactez Boulanger.fr&amp;quot; (accessibilité : nulle. c&amp;#39;est une image sans texte alternatif)&lt;/li&gt;
&lt;li&gt;Une page différente apparaît, avec les 8 services, où celui que j&amp;#39;ai sélectionné est &amp;quot;ouvert&amp;quot;. Aucun des choix proposés ne me convient. Je change de service pour &amp;quot;Les produits ou les services (je vous ai parlé de la non accessibilité du site ?). Voilà, je peux choisir un type de contact qui me convient &amp;quot;Question concernant la carte de fidélité&amp;quot;&lt;/li&gt;
&lt;li&gt;Et là, alors que je suis connecté, qu&amp;#39;ils ont donc mon adresse, mon numéro de client, mon email, je dois remplir quelques informations.

&lt;ul&gt;
&lt;li&gt;Informations obligatoires (présence de * à coté de l&amp;#39;intitulé) : Nom, prénom, numéro de téléphone (là encore, pas de format... je choisi donc le format international), email, choix du mode de contact de leur part (email ou téléphone), et ma question&lt;/li&gt;
&lt;li&gt;Le numéro de la carte de fidélité n&amp;#39;est pas obligatoire : ouf.&lt;/li&gt;
&lt;li&gt;Des cases pour accepter ou non de recevoir des mails de promos de Boulanger et de ses partenaires (avec une ligne en gris sur fond blanc, que j&amp;#39;ai trouvé peu lisible...)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;J&amp;#39;écris un long mail (cet article est issu du mail). Enfin, je ne l&amp;#39;écris pas dans le champ : le textarea de 6 lignes, 32 colonnes, non redimensionnable est trop petit pour ma prose.&lt;/li&gt;
&lt;li&gt;Je l&amp;#39;envoie. Ah tiens, j&amp;#39;ai un message d&amp;#39;erreur (il est clair cette fois) : je n&amp;#39;ai pas saisi mon numéro de carte boulanger. Même s&amp;#39;il est &amp;quot;logique&amp;quot; de devoir saisir le numéro sur la page de contact à ce sujet, c&amp;#39;est pourtant le seul champ que je ne suis pas obligé de remplir.&lt;/li&gt;
&lt;li&gt;Je remplis le champ par mon numéro, qui d&amp;#39;après leur aide (qui apparaît au survol.. accessibilité...) doit faire 10 caractères. Sauf que je peux en mettre 12 ou plus en fait. Le champ n&amp;#39;est pas limité en nombre de caractères.&lt;/li&gt;
&lt;li&gt;J&amp;#39;arrive tout de même à envoyer mon mail, et j&amp;#39;ai donc un joli message de confirmation. Par expérience, j&amp;#39;aurais aimé recevoir une copie par mail. Pour ne pas perdre mon message, et l&amp;#39;avoir si on me demande de redonner des infos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/boulanger-confirmation.jpg&quot; alt=&quot;Boulanger, une fois le mail envoyé&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Pour aller plus loin&lt;/h3&gt;

&lt;p&gt;Après avoir envoyé le mail, j&amp;#39;ai commencé mon article, et j&amp;#39;ai du coup été tatillon : lecture du code source de quelques pages, etc. Quelques trucs qui me chiffonnent en vrac :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;La page de contact n&amp;#39;a pas de balise &amp;quot;title&amp;quot;&lt;/li&gt;
&lt;li&gt;A la louche : 4 fichiers css (+2 pour le print), 20 fichiers js...&lt;/li&gt;
&lt;li&gt;Le design du formulaire de contact en balise table dans une balise table dans une balise table.&lt;/li&gt;
&lt;li&gt;La vérification des champs provoque un message d&amp;#39;erreur (un seul : c&amp;#39;est une bonne chose) mais est faite en javascript (accessibilité...)&lt;/li&gt;
&lt;li&gt;Des balises mises en commentaires HTML.&lt;/li&gt;
&lt;li&gt;La liste des mot-clés (meta keyword) me semble un peu longue, mais admettons. Par contre, le dernier mot-clé est terminé par un point. Étrange.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A la base, je comptais juste faire un achat rapide. Je viens de passer la soirée à faire un audit qualité (bug / ergonomie / accessibilité / webperf) à boulanger. C&amp;#39;est cadeau : je n&amp;#39;ai fait que survoler. J&amp;#39;encourage Boulanger à le faire à fond (ou mieux, à le faire faire par des experts).
(Evidemment, si j&amp;#39;ai une réponse, je la publierais ici)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tester sur plusieurs navigateurs</title>
   <link href="http://blog.fabricebournisien.eu///2013/02/26/tester-sur-plusieurs-navigateurs/"/>
   <updated>2013-02-26T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/02/26/tester-sur-plusieurs-navigateurs</id>
   <content type="html">&lt;p&gt;Tester de façon automatique, c&amp;#39;est bien. Le faire sur plusieurs environnements, c&amp;#39;est mieux.&lt;/p&gt;

&lt;p&gt;Dans mon cas, par défaut, mes tests sont lancés sur Firefox. Sur un serveur jenkins-ci (sur debian), c&amp;#39;est en effet le navigateur le plus facile à gérer. Ils sont exécutés une fois par jour, et aussi à la demande.&lt;/p&gt;

&lt;p&gt;Certains scenarios testent la version mobile de nos sites. Il nous faut aussi tester nos sites pour différents navigateurs. Pour cela, les profils et les tags de cucumber sont très intéressants.&lt;/p&gt;

&lt;h3&gt;Tags cucumber&lt;/h3&gt;

&lt;p&gt;Au dessus de chaque scénario, il est possible de lister des tags. On peut ensuite exécuter tous les tests portant un tag particulier.&lt;/p&gt;

&lt;p&gt;Cela permet de découper l&amp;#39;exécution de nombreux scénarios en plusieurs jobs sur jenkins, ce qui est plus confortable : si un test passe dans le rouge, il faut analyser un rapport pour 10 scénario au lieu de 300. Si on veut re-tester ce point précis, on mettra également moins de temps.&lt;/p&gt;

&lt;p&gt;On exécute les scénarios avec la ligne &amp;quot;cucumber --tag @montag&amp;quot;. Si le tag n&amp;#39;existe pas, le résultat affichera immédiatement 0 scenarios.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@admin&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@montag&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@ie&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;un&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tested&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Cucumber.yml&lt;/h3&gt;

&lt;p&gt;Les profils de cucumber se gère dans un fichier au format yaml, qui peut gérer beaucoup de choses :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ajouter automatiquement des paramètres de tags&lt;/li&gt;
&lt;li&gt;Passer des variables à l&amp;#39;environnement de tests, qui peut ensuite les utiliser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exemple avec une partie de mon fichier :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% common &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-r support -r features --tags ~@wip --tags ~@danger 
--color --format pretty --format html -o results.html --format junit -o junit&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# default : staging and firefox&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= common %&amp;gt; BROWSER=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firefox&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;danger: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;support&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@wip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pretty&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firefox&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;ie: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= common %&amp;gt; ENV=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;staging&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ie&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;ff: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= common %&amp;gt; ENV=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;staging&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firefox&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;chrome: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= common %&amp;gt; ENV=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;staging&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chrome&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;mobile: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= common %&amp;gt; ENV=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;staging&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mobile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La première ligne définit des paramètres commun à la plupart des profils :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On impose de récupérer le dossier features (dans lequel se trouvent les scenarios) et le dosser support (qui contient le code qui &amp;quot;gère&amp;quot; le navigateur)&lt;/li&gt;
&lt;li&gt;On exclut les tests portant le tag @wip (work in progress) et le tag @danger&lt;/li&gt;
&lt;li&gt;On demande l&amp;#39;affichage des résultats complets (avec les étapes et la couleur)&lt;/li&gt;
&lt;li&gt;On demande l&amp;#39;export des résultats au format html et au format junit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lorsqu&amp;#39;on utilise un profil, on peut lancer pour un tag donné. Exemple : &lt;code&gt;cucumber . --tag @test -p chrome&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Viennent ensuite les profils :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-p default: lance les tests sur firefox&lt;/li&gt;
&lt;li&gt;-p danger: autorise le lancement des tests taggués @danger&lt;/li&gt;
&lt;li&gt;-p ie, ff, chrome, mobile: lance les tests sur un navigateur particulier&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Différences entre les navigateurs&lt;/h3&gt;

&lt;p&gt;Passer le nom du navigateur ne suffit pas, il faut également l&amp;#39;utiliser dans le code pour travailler avec le navigateur voulu.&lt;/p&gt;

&lt;p&gt;Dans notre cas, nous lancons le navigaeur avant chaque scénario pour éviter qu&amp;#39;un test ait un impact sur le suivant.&lt;/p&gt;

&lt;p&gt;Voici le code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Before&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;BROWSER&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ie&#39;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ie&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;mobile&#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mobile_useragent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like \
        Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 \
        Mobile/9B206 Safari/7534.48.3&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;general.useragent.override&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mobile_useragent&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;chrome&#39;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chrome&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Default case : firefox&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;download_directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/downloads&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;download_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;windows?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;browser.download.folderList&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;browser.download.dir&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;download_directory&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;browser.link.open_newwindow&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;browser.helperApps.neverAsk.saveToDisk&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;application/octet-stream&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;network.http.use-cache&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Resize window&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;BROWSER&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;mobile&#39;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resize_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resize_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;640&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;960&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On exploite le nom du navigateur pour lancer le bon, avec des paramètres particuliers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Le mobile lance un Firefox avec le profil d&amp;#39;un navigateur Iphone (et une résolution de classique pour un mobile)&lt;/li&gt;
&lt;li&gt;Pour internet explorer et chrome, il faut avoir téléchargé les exécutables (sur le groupe selenium) et les avoir ajoutés au path&lt;/li&gt;
&lt;li&gt;Pour firefox, on ajoute des paramètres pour effectuer des tests d&amp;#39;upload et download de fichiers)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Les tests ont-ils changés?&lt;/h3&gt;

&lt;p&gt;Lorsque j&amp;#39;ai commencé à coder ces tests, il y a plus d&amp;#39;un an, j&amp;#39;avais anticipé l&amp;#39;architecture pour gérer ce genre de problématique. La mise en place n&amp;#39;a pourtant pas eu lieu sans douleur.&lt;/p&gt;

&lt;p&gt;Certains navigateurs ne se comportent pas tout à fait comme les autres. Il faut donc mettre à jour son code pour qu&amp;#39;il soit le plus &amp;quot;ré utilisable possible&amp;quot;.&lt;/p&gt;

&lt;p&gt;Dans le cas d&amp;#39;Internet Explorer, les modifications apportées :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ajout d&amp;#39;un tag @ie sur les tests compatibles (et stables) avec IE.&lt;/li&gt;
&lt;li&gt;Dans certains cas de remplissage de formulaire, ajout d&amp;#39;une ligne de code pour donner le focus au champ à remplir&lt;/li&gt;
&lt;li&gt;Modification des timeout du projet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On lance donc les tests pour Internet Explorer avec la commande &lt;code&gt;cucumber --tag @ie -p ie&lt;/code&gt;. On peut changer le tag, mais certains ne fonctionnent pas encore sous IE à cause de codes vraiment spécifiques.&lt;/p&gt;

&lt;p&gt;Voici deux exemples de code modifé spécifiquement pour IE :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;BROWSER&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ie&#39;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# internet explorer is slower : timeout increase&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;TIMEOUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;LONG_TIMEOUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;SHORT_TIMEOUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;TIMEOUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;LONG_TIMEOUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ce code définit les constantes des timeout pour l&amp;#39;ensemble des test.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;BROWSER&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;ie&#39;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# need for IE purpose&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;wait_until&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LONG_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;login_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;login_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;visible?&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;username_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# need for IE purpose&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Les commentaires dans le code parlent d&amp;#39;eux mêmes. Documenter le code spécifique à IE est d&amp;#39;ailleurs indispensable si on veut garder ses modifications qui semblent &amp;quot;inutiles&amp;quot;.&lt;/p&gt;

&lt;p&gt;Si les tests avec Firefox sont joués chaque jour sur un serveur, en 2h45 environ, ceux pour IE sont exécutés en local, en 3h, alors que certains tests ne sont pas exécutés sur IE.&lt;/p&gt;

&lt;p&gt;Ce sont donc plus de 300 scénarios par jour, 12 000 par mois. Sans compter les tests unitaires, les tests manuels...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Il faut savoir se fier à ses tests</title>
   <link href="http://blog.fabricebournisien.eu///2013/01/22/il-faut-savoir-se-fier-a-ses-tests/"/>
   <updated>2013-01-22T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2013/01/22/il-faut-savoir-se-fier-a-ses-tests</id>
   <content type="html">&lt;p&gt;Vroici l&amp;#39;histoire d&amp;#39;un test fonctionnel &amp;quot;basique&amp;quot; mais techniquement compliqué à mettre en place.&lt;/p&gt;

&lt;h3&gt;Passé&lt;/h3&gt;

&lt;p&gt;Depuis plusieurs mois, nous sommes 2 à developper les tests automatiques. Nous avons une longue liste de tests à ajouter que nous dépilons progressivement. Certains tests sont présents depuis longtemps dans cette liste, mais nous ne réussissons tout simplement pas à les créer, pour des raisons purement techniques. D&amp;#39;autres sont en attente de la correction du bug sur le produit.&lt;/p&gt;

&lt;h3&gt;Lundi&lt;/h3&gt;

&lt;p&gt;Pour l&amp;#39;un d&amp;#39;eux, je réussi finalement à trouver une solution tarabiscotée qui semble marcher. La solution ne me plait pas totalement, cela revient à exécuter du javascript dans un navigateur que je controle avec watir, lancé depuis un cucumber géré par un jenkins.&lt;/p&gt;

&lt;p&gt;L&amp;#39;utilisation du javascript (langage que je ne maîtrise pas) pour ce détail me gêne : s&amp;#39;il me permet de tester la fonctionnalité, je ne pourrais pas simplement tester certains points de la fonctionnalité.&lt;/p&gt;

&lt;p&gt;En outre, cela m&amp;#39;empêche d&amp;#39;être sur de moi pour ce test : j&amp;#39;ai peur qu&amp;#39;il ne soit pas stable et pérenne.&lt;/p&gt;

&lt;h3&gt;Mercredi&lt;/h3&gt;

&lt;p&gt;Mercredi dernier, j&amp;#39;ai remonté un problème qui entrainait un problème en cascade sur l&amp;#39;ensemble de mes tests fonctionnels (40 scenarios échoués sur 270).&lt;/p&gt;

&lt;p&gt;Il y avait deux importants chantiers effectués par mes collègues pour des mises à jours importantes, qui demandait des corrections.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2013/mug-qualite.jpg&quot; alt=&quot;Il faut savoir se fier à ses tests&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Jeudi&lt;/h3&gt;

&lt;p&gt;Jeudi, c&amp;#39;est normalement la fin du codage des nouveautés pour le sprint en cours. Le jeudi c&amp;#39;est donc débug, tests, préparation du changelog et de la mise en production...&lt;/p&gt;

&lt;p&gt;Lorsque j&amp;#39;arrive un jeudi avec mes indicateurs qui clignotent en rouge, je n&amp;#39;aime pas ça. Je survole rapidement, vois que c&amp;#39;est un problème commun pour les 10 premiers rapports que j&amp;#39;analyse en profondeur. Je demande donc une nouvelle correction, puis je relance des tests qui semblent être juste des faux positifs. Certains reviennent à la normale.&lt;/p&gt;

&lt;p&gt;Je désactive certains tests qui paraissent toujours instables. Parmi eux, les tests ajoutés le lundi : je ne les sentais pas en les codant, je n&amp;#39;ai pas cru en eux lorsqu&amp;#39;ils ont signalé un bug.&lt;/p&gt;

&lt;h3&gt;Lundi&lt;/h3&gt;

&lt;p&gt;Lundi, jour de la mise en production. Une fois finie, l&amp;#39;équipe teste en production les changements pour vérifier que tout est normal.&lt;/p&gt;

&lt;p&gt;En faisant un test sur tout à fait autre chose, je me suis dit &amp;quot;y&amp;#39;a un truc qui cloche, (pas ce que je suis en train de tester), mais je vois pas quoi&amp;quot;. Mon instinct me disait que j&amp;#39;avais raté un truc. Je fais donc un tour du côté du support.&lt;/p&gt;

&lt;p&gt;Les premiers retours utilisateurs signalent un bug m&amp;#39;a fait sourciller : on signale un bug sur la fonction testée depuis peu. Je vérifie le dernier rapport de tests : ils détectaient le bug, et étaient parfaitement stables.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;En n&amp;#39;ayant pas cru en la stabilité d&amp;#39;un test que j&amp;#39;ai codé moi-même, j&amp;#39;ai laissé passer un bug en production.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai vu un faux positif plutôt qu&amp;#39;un bug réel, alors que j&amp;#39;expliquais ce risque il y a longtemps.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai l&amp;#39;impression d&amp;#39;avoir échoué à garantir la qualité de notre produit. J&amp;#39;ai eu trop confiance dans mes collègues, et pas assez en moi.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tester un site multilingue</title>
   <link href="http://blog.fabricebournisien.eu///2012/12/06/tester-un-site-multilingue/"/>
   <updated>2012-12-06T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/12/06/tester-un-site-multilingue</id>
   <content type="html">&lt;p&gt;Travailler sur un site international demande de multiplier les tests.&lt;/p&gt;

&lt;p&gt;D&amp;#39;abord, si l&amp;#39;interface change, il est parfois intéressant de la tester dans chaque langue. Dans mon cas, ce n&amp;#39;est pas fait. Le principal risque des &amp;quot;langues&amp;quot; est l&amp;#39;affichage des textes (du point de vue design), ce qui ne peut pas être testé de façon automatique. Pour cela, une équipe multilangue qui vérifie les modifications et leurs impacts est plus réaliste.&lt;/p&gt;

&lt;p&gt;L&amp;#39;autre aspect important, c&amp;#39;est l&amp;#39;accès au site en fonction de la langue. Si vous avez une stratégie de redirection en fonction de la langue, il faut pouvoir le tester. J&amp;#39;ai l&amp;#39;impression que cela m&amp;#39;a pris du temps, alors qu&amp;#39;au final, c&amp;#39;est tout simple. Mais j&amp;#39;ai exploré beaucoup de pistes sur le sujet.&lt;/p&gt;

&lt;h3&gt;Le test&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestProductionFrench&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TestCase&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;intl.accept_languages&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;it&quot;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;teardown&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_redirection_it&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.google.it&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_redirection_fr&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.google.fr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.google.it&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;L&amp;#39;explication&lt;/h3&gt;

&lt;p&gt;Pour ce test, je n&amp;#39;ai pas utilisé cucumber, ou autre, mais juste la librairie unitest de ruby, et watir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ligne 3 à 7 : le setup, joué avant chaque test. On crée un nouveau profil pour Firefox, contenant l&amp;#39;attribut de langue voulu. Puis on charge Firefox.&lt;/li&gt;
&lt;li&gt;Ligne 9 à 11 : le teardown, qui ferme le navigateur après chaque test.&lt;/li&gt;
&lt;li&gt;Ligne 13 à 16 : premier test : on charge google.com, et on vérifie ensuite qu&amp;#39;on a bien été redirigé vers google.it (puisque le navigateur signale une préférence pour cette langue)&lt;/li&gt;
&lt;li&gt;Ligne 18 à 21 : second test, depuis google.fr&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Pourquoi j&amp;#39;ai perdu du temps&lt;/h3&gt;

&lt;p&gt;J&amp;#39;ai perdu du temps à faire fonctionner cela, pour la simple et bonne raison que cela ne marchait pas, et que mes tests testaient donc &amp;quot;mal&amp;quot;. La tête dans le guidon, je n&amp;#39;ai pas testé que le fonctionnement du changement de langue soit juste. Je cherchais à corriger le problème là où il n&amp;#39;était pas.&lt;/p&gt;

&lt;p&gt;Quelques rappels :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Changer la langue préférée pour l&amp;#39;affichage des pages de Firefox ne change pas la langue du navigateur.undefinedundefined&lt;/li&gt;
&lt;li&gt;Il est facile d&amp;#39;afficher une page qui vous donne la langue préférée de votre navigateur. Voici un exemple de code en PHP :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$lang&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;HTTP_ACCEPT_LANGUAGE&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Une petite boulette peut coûter cher</title>
   <link href="http://blog.fabricebournisien.eu///2012/10/30/une-petite-boulette-peut-couter-cher/"/>
   <updated>2012-10-30T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/10/30/une-petite-boulette-peut-couter-cher</id>
   <content type="html">&lt;p&gt;Comme je l&amp;#39;ai déjà dit, je développe des tests sous cucumber / watir pour un gros projet. J&amp;#39;ai quelques centaines de scénarios, des milliers d&amp;#39;étapes, le tout regroupé par fonctionnalité. Cela nous permet de voir rapidement si on peut mettre en prod ou non : si une fonctionnalité est testée &amp;quot;instable&amp;quot;, il faut lire le rapport détaillé.
Deux anecdotes récentes à ce sujet.&lt;/p&gt;

&lt;h3&gt;Le bug est détecté&lt;/h3&gt;

&lt;p&gt;L&amp;#39;un des tests fonctionnels crée il y a une semaine pour détecter un bug existant permettait d&amp;#39;éviter la non régression sur ce point. Ce matin, je peste à voix haute en parlant à un collègue, et un autre me dit &amp;quot;mais je l&amp;#39;ai corrigé vendredi&amp;quot;. Après test manuel, je confirme, le bug n&amp;#39;est plus présent. Pourtant, le test ne fonctionne pas.&lt;/p&gt;

&lt;p&gt;Commence alors une rapide enquête pour comprendre.&lt;/p&gt;

&lt;p&gt;Le bug : si un utilisateur remplit un champ particulier, tout semble marcher quand il sauve. Pourtant, si on rafraichit la page, on voit que cela ne marche pas.&lt;/p&gt;

&lt;p&gt;Le test a été mis en place au moment du bug, et une partie du test n&amp;#39;avait donc jamais été vérifiée avant la mise en service du test.&lt;/p&gt;

&lt;p&gt;La correction a consisté à attendre que l&amp;#39;élément testé soit bien affiché avant de le tester.&lt;/p&gt;

&lt;h3&gt;J&amp;#39;ai cru voir un petit bug&lt;/h3&gt;

&lt;p&gt;Plus tôt cette semaine, un collègue me signale qu&amp;#39;il faudrait ajouter un test sur une fonctionnalité particulière. On en discute, mais plus le temps passe, plus je suis sur que nous avons ajouté un test en ce sens récemment.&lt;/p&gt;

&lt;p&gt;Après vérification, nous avons bien un test, mais il ne voit pas le bug. Il me laisse un peu de temps pour corriger le test avant de publier sa correction, cela a facilité le travail.&lt;/p&gt;

&lt;p&gt;Durant le test, nous vérifions plusieurs éléments, en fonction des options passées.&lt;/p&gt;

&lt;p&gt;Nous avons donc une suite de vérifications, en ruby+watir&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;align&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;right&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;media-right&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;media-left&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour traduire : On vérifie qu&amp;#39;une image est présente, puis si l&amp;#39;option alignement est &amp;quot;droite&amp;quot;, je vérifie que l&amp;#39;image est aligné à droite. Sinon, je vérifie à gauche.&lt;/p&gt;

&lt;p&gt;Le problème ? Ce test ne teste rien. Tout simplement parce que le parenthésage est mauvais.&lt;/p&gt;

&lt;p&gt;En ruby, le and est prioritaire sur le .exists. Je teste donc l&amp;#39;existence d&amp;#39;un booléen au lieu de tester deux booléens.&lt;/p&gt;

&lt;p&gt;Le code corrigé ajoute juste des parenthèses pour changer la priorité.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;align&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;right&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;media-right&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;media-left&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Ce que je retiens de ces événements récents ?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;La communication dans l&amp;#39;équipe est très importante.&lt;/li&gt;
&lt;li&gt;Tester qu&amp;#39;un test détecte une panne est complexe.&lt;/li&gt;
&lt;li&gt;Il n&amp;#39;y a pas de règle sur le bon moment pour créer un test : que ce soit pendant une panne ou en dehors, seul un contrôle régulier permet de s&amp;#39;assurer que le test teste.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>L'art de signaler un bug</title>
   <link href="http://blog.fabricebournisien.eu///2012/09/17/l-art-de-signaler-un-bug/"/>
   <updated>2012-09-17T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/09/17/l-art-de-signaler-un-bug</id>
   <content type="html">&lt;p&gt;Lorsqu&amp;#39;un utilisateur lambda signale un bug, il a tendance à penser qu&amp;#39;il est évident, et qu&amp;#39;il n&amp;#39;a pas besoin de donner des informations. On se retrouve alors à devoir analyser des mails ne contenant peu ou pas d&amp;#39;informations, à leur demander des détails, ou à tester plusieurs cas possibles, en espérent &amp;quot;tomber dessus par hasard&amp;quot;.&lt;/p&gt;

&lt;p&gt;Dans tous les cas, il y a beaucoup de temps &amp;quot;perdu&amp;quot; pour trouver un bug, qui parfois n&amp;#39;est pas lié à votre site web, mais à tout autre chose : mauvaise manipulation, antivirus, etc.&lt;/p&gt;

&lt;p&gt;Lorsqu&amp;#39;on emmène sa voiture chez le garagiste, on lui donne souvent plein d&amp;#39;informations inutiles. Je me souviens d&amp;#39;une fois, où je suis arrivé pour lui dire : &amp;quot;&lt;em&gt;je sais pas ce qu&amp;#39;elle a : elle vibre quand je roule, les vibrations augmentent avec la vitesse. Et j&amp;#39;ai du mal à passer les vitesses, comme si ce n&amp;#39;était plus aligné.&lt;/em&gt;&amp;quot;&lt;/p&gt;

&lt;p&gt;La garagiste a dit &amp;quot;je pense que je sais&amp;quot;, a été démarré la voiture sur le parking, puis a éteint et a répondu : &amp;quot;&lt;em&gt;Supports moteurs HS : il va falloir les changer&lt;/em&gt;&amp;quot;. A peu de chose près, je pensais à Bourvil.&lt;/p&gt;

&lt;p&gt;(Pour la petite histoire, 2 supports moteurs sur 3 cassés, à la fin d&amp;#39;un voyage de 800km.)&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/Ipl67KqEkWc?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Mais alors, quelles informations donner lors du signalement d&amp;#39;un bug ? toutes celles qui peuvent être utiles :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigateur (et version : Firefox 3.5 et Firefox 14 se ressemblent, mais ne sont pas identique, loin de là)&lt;/li&gt;
&lt;li&gt;Système d&amp;#39;exploitation (non, Safari pour windows et pour mac ne se comportent pas de la même façon)&lt;/li&gt;
&lt;li&gt;Antivirus (pas utile à chaque fois, mais c&amp;#39;est quand il manque qu&amp;#39;il est utile)&lt;/li&gt;
&lt;li&gt;Messages d&amp;#39;erreur : tous, en entier.&lt;/li&gt;
&lt;li&gt;Procédure pour reproduire le bug : où cliquez-vous, dans quel ordre...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parfois, un bug se joue à un détail : vous cliquez sur le bouton, ou alors vous tabulez et validez au clavier ?&lt;/p&gt;

&lt;p&gt;Plus vous donnez d&amp;#39;informations précises, plus cela peut être utile à corriger le bug.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Les logiciels tiers, une calamité</title>
   <link href="http://blog.fabricebournisien.eu///2012/07/19/les-logiciels-tiers-une-calamite/"/>
   <updated>2012-07-19T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/07/19/les-logiciels-tiers-une-calamite</id>
   <content type="html">&lt;p&gt;Lorsqu&amp;#39;on rencontre des problèmes vraiment étranges sur une fonction particulière, on pense d&amp;#39;abord que cela n&amp;#39;a jamais pu marcher, on ne comprend plus.&lt;/p&gt;

&lt;p&gt;Puis on enquête. Et parfois, la cause du problème est une surprise, autant pour nous que pour les personnes touchées. Quelques exemples plus ou moins vieux.&lt;/p&gt;

&lt;h3&gt;La box qui coupe&lt;/h3&gt;

&lt;p&gt;Petit retour sur l&amp;#39;article : Les bugs poilus sont-ils solubles dans le temps ?&lt;/p&gt;

&lt;p&gt;Au début, il s&amp;#39;agissait d&amp;#39;un simple problème de validation de formulaire AJAX pour une partie des utilisateurs. Ils emblaient tous utiliser une LiveBox. Nous avons éliminé cette piste au bout de plusieurs jours, certains cas ne collant pas.&lt;/p&gt;

&lt;p&gt;Mais au final, il semble que ce problème qui nous a occupé pendant plus d&amp;#39;un mois était bien une mise à jour de la LiveBox : la mise à jour suivante a corrigé le problème.&lt;/p&gt;

&lt;h3&gt;L&amp;#39;antivirus anti web&lt;/h3&gt;

&lt;p&gt;En général, je ne cite pas, mais cela fait trop de fois où nous rencontrons des problèmes avec Kaspersky.&lt;/p&gt;

&lt;p&gt;Deux points sans rapport, tous les deux liés à des classiques du web.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lorsque vous envoyez une photo via certains protocoles, on a un comportement aléatoire :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Images non envoyées&lt;/li&gt;
&lt;li&gt;Images envoyées de façon incomplète.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Evidemment, il suffit de désactiver Kaspersky pour que cela fonctionne. Selon les navigateurs, nous utilisons le protocole PUT ou le protocole GET. si le get fonctionne, le put pose de nombreux problèmes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Les notifications, très utilisées sur les réseaux sociaux, sont dégradées : le nombre de notifications n&amp;#39;est pas mis à jour après leur lecture, en particulier sur Google+. Là encore, désactiver l&amp;#39;antivirus suffit à régler le problème.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/bug-kaspersky-notif.jpg&quot; alt=&quot;Toutes les notifications ont été lues, et pourtant&quot;&gt;&lt;/p&gt;

&lt;h3&gt;La navigation compatible&lt;/h3&gt;

&lt;p&gt;Lorsqu&amp;#39;on utilise Internet Explorer, il lui arrive de décider d&amp;#39;utiliser le mode compatible sur certains sites. Un utilisateur qui ne fait pas attention pensera utiliser la dernière version du navigateur, mais aura entre les mains un navigateur se comportant comme IE7 ou IE8 dans le meilleur des cas.&lt;/p&gt;

&lt;p&gt;Les éditeurs wysiwyg sont particulièrement concernés par ce genre de problème, mais ce ne sont pas les seuls.&lt;/p&gt;

&lt;p&gt;Lorsqu&amp;#39;on sait en outre que le mode compatible IE8 est différent d&amp;#39;IE8, on sait qu&amp;#39;on va s&amp;#39;arracher les cheveux pour trouver la cause du problème.&lt;/p&gt;

&lt;h3&gt;Le plugin défaillant&lt;/h3&gt;

&lt;p&gt;Les navigateurs sont depuis plusieurs années extensibles : on peut ajouter des fonctionnalités plus ou moins intéressantes. La plupart des développeurs ont installé FireBug par exemple.&lt;/p&gt;

&lt;p&gt;Revenons à celle qui me pose problème : &amp;quot;Facebook Disconnect&amp;quot;. Cette extension sous chrome permet d&amp;#39;empêcher Facebook de vous traquer. En contre partie, elle bloque des scripts, sans vous demander votre avis. Un exemple ? notre éditeur wysiwym. Ce n&amp;#39;est apparement pas la seule à bloquer l&amp;#39;éditeur, mais la récupération des informations auprès de nos utilisateurs prend beaucoup de temps sur des problèmes aussi pointus.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Les mises à jour automatiques sont une plaie : les utilisateurs ne comprennent pas pourquoi le comportement change sans modification, et pense systématiquement à un problème du produit concerné, pas d&amp;#39;un logiciel tiers.&lt;/p&gt;

&lt;p&gt;Certains logiciels s&amp;#39;adjugent des pouvoirs très importants, sans le signaler à leurs utilisateurs, dégradant par la même occasion la navigation sur des sites web qui fonctionnent pourtant parfaitement par ailleurs.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Les tests doivent-ils tester ?</title>
   <link href="http://blog.fabricebournisien.eu///2012/06/18/les-tests-doivent-ils-tester/"/>
   <updated>2012-06-18T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/06/18/les-tests-doivent-ils-tester</id>
   <content type="html">&lt;h3&gt;Le juste équilibre dans les tests&lt;/h3&gt;

&lt;p&gt;Mettre en place des &lt;strong&gt;tests fonctionnels automatiques&lt;/strong&gt; revient à jouer à l&amp;#39;équilibriste entre l&amp;#39;existant (déjà testé et &amp;quot;stable&amp;quot;), les nouvelles fonctionnalités (et leurs effets de bords sur l&amp;#39;existant), et des eléments externes : navigateurs (et mises à jours), plugins, utilisateurs...&lt;/p&gt;

&lt;p&gt;Le responsable qualité et l&amp;#39;équipe doivent avoir confiance dans leurs indicateurs, et doivent connaître leurs limites, afin de pouvoir planifier les actions pour éliminer les bugs.&lt;/p&gt;

&lt;h3&gt;Des tests toujours réussis&lt;/h3&gt;

&lt;p&gt;J&amp;#39;ai lu récemment que des tests fonctionnels toujours &amp;quot;vert&amp;quot; sont mauvais, qu&amp;#39;ils ne testent rien. (&lt;a href=&quot;http://experttesters.com/2012/05/17/why-100-test-pass-rates-are-bad/&quot;&gt;Why 100% Test Pass rates are Bad&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Je ne suis pas d&amp;#39;accord : j&amp;#39;ai la hantise de tests &amp;quot;rouge&amp;quot; : à chaque fois, cela demande d&amp;#39;aller analyser le rapport, vérifier si c&amp;#39;est un faux positif. (Cela arrive régulièrement : même en prévoyant au mieux, il arrive qu&amp;#39;une action dépasse le temps prévue pour s&amp;#39;exécuter, etc.)&lt;/p&gt;

&lt;h4&gt;Les tests doivent être toujours vert&lt;/h4&gt;

&lt;p&gt;Si votre écran de contrôle affiche toujours du rouge, vous finirez pas ne plus lui faire confiance. Le problème, c&amp;#39;est que si vous n&amp;#39;avez pas confiance dans des tests automatisés, c&amp;#39;est que vous perdrez du temps à les refaire à la main. Et que lorsqu&amp;#39;ils passeront au rouge, vous penserez à un faux positif avant même de regarder, et vous pourriez laisser passer un bug.&lt;/p&gt;

&lt;h4&gt;L&amp;#39;important n&amp;#39;est pas la couleur, mais la couverture&lt;/h4&gt;

&lt;p&gt;Je préfère avoir une couverture de 50% fiable qu&amp;#39;une plus grande couverture mais instable. Il faut bien comprendre qu&amp;#39;un test vert ne dit pas &amp;quot;il n&amp;#39;y a pas de bug sur ce projet&amp;quot;, mais plutôt &amp;quot;aucun bug prévu n&amp;#39;a été trouvé cette fois-ci&amp;quot;. La différence semble tenue, mais elle est primordiale.&lt;/p&gt;

&lt;p&gt;L&amp;#39;équipe doit savoir si les tests ont des lacunes, afin de redoubler d&amp;#39;effort &amp;quot;manuels&amp;quot; dans cette partie. Il ne faut jamais oublier que les tests automatiques ne testent pas tout le projet, mais seulement ce qu&amp;#39;ils sont sensés tester.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/screen_tests.jpg&quot; title=&quot;Ecran de contrôle&quot; style=&quot;width: 200px; float: left;&quot;/&gt;
&lt;img src=&quot;/public/pictures/2012/cucumber-report.png&quot; title=&quot;Résultats de tests cucumber&quot; style=&quot;width: 200px; float: left;&quot;/&gt;
&lt;img src=&quot;/public/pictures/2012/graphique-nb-issues.jpg&quot; title=&quot;Evolution du nombre de bugs&quot; style=&quot;width: 200px; float: left;&quot;/&gt;
&lt;p style=&quot;clear: both;&quot;&gt;&lt;/p&gt;&lt;/p&gt;

&lt;h3&gt;Choix des métriques&lt;/h3&gt;

&lt;p&gt;Le choix des métriques est primordial : cela influe sur le ressenti de la qualité par l&amp;#39;équipe qui développe le produit. (&lt;a href=&quot;http://martijndevrieze.net/2012/05/30/test-automation-metrics-what-do-you-report-on/&quot;&gt;Test automation metrics - what do you report on?&lt;/a&gt;)&lt;/p&gt;

&lt;h4&gt;Mise à jour des métriques&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;En début de projet, la pertinence du &amp;quot;nombre&amp;quot; de bugs est relative. Quand le projet a déjà été livré dans une version beta au public, ce nombre est déjà plus réaliste.&lt;/li&gt;
&lt;li&gt;Les tests de charge sont importants tout le temps, mais il ne faut jamais oublier le stade d&amp;#39;avancement du projet. Un test de charge qui semble échouer peut ne pas l&amp;#39;être si on le fait durant une &amp;quot;maintenance programmée&amp;quot; du serveur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Certains pensent qu&amp;#39;il vaut mieux avoir trop de métriques que pas assez. Mais il faut pondérer ceci par le temps pour les analyser et les comprendre.&lt;/p&gt;

&lt;h4&gt;Stratégie générale&lt;/h4&gt;

&lt;p&gt;De la même façon, la remise en cause des stratégies de tests doit être régulière. Il est nécessaire de vérifier régulièrement que les tests testent bien, sont stables, détectent bien les vrais bugs.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Lancement d'une beta publique</title>
   <link href="http://blog.fabricebournisien.eu///2012/06/07/lancement-d-une-beta-publique/"/>
   <updated>2012-06-07T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/06/07/lancement-d-une-beta-publique</id>
   <content type="html">&lt;p&gt;Cette semaine, nous lançons officiellement la beta publique de notre produit phare, &lt;a href=&quot;http://www.overblog.com&quot;&gt;OverBlog&lt;/a&gt;. Cela fait près d&amp;#39;un an que les premières reflexions ont commencé, que le développement a commencé. Nous avons changé d&amp;#39;organisation de travail (passage à &lt;a href=&quot;http://fr.wikipedia.org/wiki/Scrum_(m%C3%A9thode)&quot;&gt;scrum&lt;/a&gt;), nous avons accentué le TDD (&lt;a href=&quot;http://fr.wikipedia.org/wiki/TDD&quot;&gt;test driven development&lt;/a&gt;), nous avons changé de technologie (&lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Nous avons mis en place de nombreux contrôles afin de mieux tester et s&amp;#39;assurer que tout se passe bien. Pourtant, malgré tout cela, le stress me gagne depuis quelques jours : je serais en première ligne après le lancement. Je gérerais les retours internes de dernière minute, le support des utilisateurs... je centraliserais tout, pour donner ensuite les priorités à mes collègues développeurs.&lt;/p&gt;

&lt;h3&gt;Pour ajouter au stress :&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Certains collègues sont absents (pour assister à des conférences)&lt;/li&gt;
&lt;li&gt;Le lancement se fait à New-York, pendant le BlogWorld. (Donc, avec du décalage horaire)&lt;/li&gt;
&lt;li&gt;Il faut continuer de gérer la version actuelle : cela complique un peu la tâche, surtout lorsque l&amp;#39;utilisateur vous parle sans vous préciser quelle plateforme il utilise...&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Ce que je retiens de ma nuit ?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Faire une modification en urgence à 17h était une mauvaise idée. Suite à un problème, elle a provoqué un effet de bord désastreux durant une demie-heure.&lt;/li&gt;
&lt;li&gt;L&amp;#39;équipe est restée mobilisée une grande partie de la nuit pour s&amp;#39;assurer que tout se passait bien.&lt;/li&gt;
&lt;li&gt;Suivre l&amp;#39;avancement du trafic sur cette version était une émotion forte : cela fait 5 ans que je travaille dans les bureaux d&amp;#39;OverBlog, mais c&amp;#39;est la première fois que j&amp;#39;attends devant un graphique pour voir s&amp;#39;il va monter.&lt;/li&gt;
&lt;li&gt;Un souci sur un détail technique particulier : une seule personne était capable de le résoudre, et il nous a fallu une heure pour le contacter, et 2 heures pour que le problème soit totalement corrigé.&lt;/li&gt;
&lt;li&gt;La nuit a été courte pour certains d&amp;#39;entre nous. Mais ce matin, l&amp;#39;envie de finir au plus tôt les correctifs nécessaires pour que ce soit parfait est toujours là.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mais ce que je retiens avant tout : les premiers utilisateurs sont ravis, et accrochent bien à cette nouvelle version.&lt;/p&gt;

&lt;p&gt;Notre travail des derniers mois, particulièrement stressant durant les dernières semaines à peaufiner les détails, à régler les derniers problèmes, est vu à sa juste valeur (par des blogueurs célèbres, des développeurs...)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Quand le texte rencontre les tests automatiques</title>
   <link href="http://blog.fabricebournisien.eu///2012/06/04/tests-automatiques/"/>
   <updated>2012-06-04T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/06/04/tests-automatiques</id>
   <content type="html">&lt;p&gt;Lors de SudWeb en mai, j&amp;#39;ai discuté avec le créateur de &lt;a href=&quot;http://casperjs.org/&quot;&gt;CasperJS&lt;/a&gt; pour lui expliquer pourquoi je préférais Watir à son outil.&lt;/p&gt;

&lt;h3&gt;Petit tour rapide des défauts de CasperJS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Limitation des sélecteurs&lt;/strong&gt; : Avec watir, je peux sélectionner un élement à peu près comme je veux. Avec CasperJs, le choix est plus limité (mais il peut être étendu en javascript.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Navigateur&lt;/strong&gt; : CasperJS utilise un navigateur headless basé sur webdriver. Watir permet de prendre le contrôle de la plupart des navigateurs (via selenium)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Langage&lt;/strong&gt; : je n&amp;#39;aurais pas dit ça il y a 2 ans, mais je préfère le ruby au javascript.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Capture d&amp;#39;écran&lt;/strong&gt; : ~~Il est difficile de faire une capture d&amp;#39;écran anvec un navigateur headless.~~ Apparement, c&amp;#39;est possible aussi en CasperJs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mais je suis partial : je connais et j&amp;#39;utilise Watir depuis 2 ans, et j&amp;#39;au découvert CasperJs depuis une semaine.&lt;/p&gt;

&lt;h3&gt;Point sur CasperJS&lt;/h3&gt;

&lt;p&gt;Je ne nie pas son intérêt. Mettre en place des tests fonctionnels sous Watir / cucumber (et hudson pour gérer tout cela) prend du temps, et cela me fait penser à sortir l&amp;#39;infanterie pour écraser un moustique.&lt;/p&gt;

&lt;p&gt;Si on a besoin de créer des tests rapides, et que &amp;quot;webdriver&amp;quot; nous suffit, et si on en plus on est à l&amp;#39;aise avec le javascript : je vous le conseille.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/texte.jpg&quot; title=&quot;Test de textes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Notre point de désaccord n&amp;#39;était pas sur les outils, leurs limitations, etc.. mais sur les tests eux-mêmes.&lt;/p&gt;

&lt;h3&gt;Doit-on utiliser les textes de l&amp;#39;interface pour tester ?&lt;/h3&gt;

&lt;p&gt;Lorsqu&amp;#39;on met en place des tests, on utilise au maximum les informations de l&amp;#39;interface : class, name, id, parfois même url (src ou href).&lt;/p&gt;

&lt;p&gt;Certains utilisent même les xpath, mais je le déconseille : je trouve que cela alourdit la maintenance du projet à long terme.&lt;/p&gt;

&lt;p&gt;Mais cela n&amp;#39;exclut pas d&amp;#39;utiliser aussi le texte. Mais dire &amp;quot;Cliquer sur le bouton &amp;#39;Ajouter au panier&amp;#39;&amp;quot; a un défaut : si le texte change, il faut mettre à jour les tests.&lt;/p&gt;

&lt;p&gt;Donc, utiliser les textes peut être intéressant, mais il ne faut pas en abuser, et les &amp;quot;limiter&amp;quot;.&lt;/p&gt;

&lt;h3&gt;Doit-on tester les textes de l&amp;#39;interface ?&lt;/h3&gt;

&lt;p&gt;Tester tous les textes reviendrait à devoir modifier les tests à chaque mise à jour de textes. Ce serait coûteux en temps, et dà difficile à maintenir. (Dans la plupart des projets web, le nombre de texte augmente dans le temps)&lt;/p&gt;

&lt;p&gt;Par contre, certains textes doivent être tester dans l&amp;#39;interface :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tous les messages d&amp;#39;erreur&lt;/li&gt;
&lt;li&gt;Tous les message de validation&lt;/li&gt;
&lt;li&gt;Les liens principaux de navigation&lt;/li&gt;
&lt;li&gt;Les boutons d&amp;#39;action&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Quoi d&amp;#39;autre ?&lt;/h3&gt;

&lt;p&gt;Cela nous donne une liste &amp;quot;réduite&amp;quot; de textes qui peuvent être utilisés durant les tests. Si un texte change pour une raison inconnue, certains tests passeront dans le rouge, et il n&amp;#39;y aura qu&amp;#39;à les mettre à jour le texte dans les tests pour corriger.&lt;/p&gt;

&lt;p&gt;Il n&amp;#39;est pas utile de tester les textes : les utiliser durant les tests revient au même. (l&amp;#39;optimisation est importante, j&amp;#39;y reviendrais)&lt;/p&gt;

&lt;p&gt;Je travaille sur un projet disponible dans 5 langues. J&amp;#39;ai donc rassembler tous les textes dans un lot de fichier (un par langue)&lt;/p&gt;

&lt;p&gt;Last but not least : en tant que responsable qualité, je suis garant que les textes soient conformes. Si nos traducteurs modifient le texte anglais du bouton &amp;quot;Save&amp;quot; en &amp;quot;See&amp;quot;, je dois agir en conséquence pour obtenir une correction au plus tôt.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Les bugs sont partout, mêmes dans les jeux</title>
   <link href="http://blog.fabricebournisien.eu///2012/05/31/les-bugs-sont-partout-memes-dans-les-jeux/"/>
   <updated>2012-05-31T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/05/31/les-bugs-sont-partout-memes-dans-les-jeux</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;Witch Doctors should no longer receive an error if they kill a Shadow Clone with a Damage-Over-Time (DoT) skill after it&amp;#39;s launched a Firebomb but before it&amp;#39;s reached its target
&lt;br/&gt;Blizzard&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Parfois, on trouve un bug de façon complètement aléatoire, on n&amp;#39;arrive pas à le reproduire, etc. Mais &lt;a href=&quot;http://eu.blizzard.com/fr-fr/&quot;&gt;Blizzard&lt;/a&gt; m&amp;#39;épate dans leur premier patch de Diablo 3. Pour résumer pour les non anglophones / non joueurs :&lt;/p&gt;

&lt;p&gt;Si un personnage de la classe féticheur tue son ombre (en affrontant Diablo), en utilisant un sort de &amp;quot;dommages périodiques&amp;quot; (ex : du poison) et que la mort se produit après lui avoir jeté une bombe incendiaire mais avant qu&amp;#39;elle le touche, on a une erreur.&lt;/p&gt;

&lt;p&gt;Je n&amp;#39;ose imaginer le temps et les tests pour le reproduire.&lt;/p&gt;

&lt;p&gt;Pour donner une idée : j&amp;#39;ai un personnage de cette classe, j&amp;#39;ai affronté plusieurs fois Diablo, et mon ombre. Et je n&amp;#39;ai jamais rencontré ce cas de figure.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/diablo3-ombre.jpg&quot; title=&quot;Affronter diablo et son ombre&quot; style=&quot;width: 350px; float: left;&quot;/&gt;
&lt;img src=&quot;/public/pictures/2012/diablo_bug.jpg&quot; title=&quot;Problème connection&quot; style=&quot;width: 350px; float: left;&quot;/&gt;
&lt;p style=&quot;clear: both;&quot;&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Les tests d&amp;#39;un jeu vidéo n&amp;#39;ont sans doute pas grand chose à voir avec les tests d&amp;#39;une application web, en particulier quand il faut tester également la charge très importante d&amp;#39;un titre de Blizzard. Qui pour ne rien simplifier, est très variable dans le temps.&lt;/p&gt;

&lt;p&gt;Je sais que l&amp;#39;équipe de Blizzard se penche actuellement sur une erreur 37 lors de la connexion, et je leur souhaite bien du courage. Les propos sur les forums de battle.net, facebook, sont très amères (et je peux le concevoir en partie : il est impossible de jouer en Europe pendant qu&amp;#39;il est possible de jouer en Asie ou en Amérique)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SudWeb 2012 : j'y étais, et vous ?</title>
   <link href="http://blog.fabricebournisien.eu///2012/05/29/sudweb-2012-j-y-etais-et-vous/"/>
   <updated>2012-05-29T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/05/29/sudweb-2012-j-y-etais-et-vous</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.sudweb.fr/&quot;&gt;SudWeb&lt;/a&gt;, conférence sur le faire-savoir dans le domaine du web au sens large, se tenait vendredi et samedi dernier.&lt;/p&gt;

&lt;p&gt;Depuis, les tweets et les articles sur le sujet racontant ce grand moment se suivent, et se ressemblent tous, tellement tout le monde a trouvé l&amp;#39;événement bien organisé et intéressant. Voici ma vision des choses :)&lt;/p&gt;

&lt;h3&gt;Jeudi : accueil des orateurs&lt;/h3&gt;

&lt;p&gt;Les orateurs, dont je faisais partie, se sont retrouvés tous ensemble pour se rencontrer en avant-première, discuter entre nous, faire connaissance, et parler de nos attentes et de nos présentations.&lt;/p&gt;

&lt;p&gt;Ma présentation était un élaboratoire, et j&amp;#39;ai pu ainsi avoir une vision de ce que je voulais/devais présenter le samedi.&lt;/p&gt;

&lt;p&gt;En passant, j&amp;#39;ai retrouvé un ancien camarade de promo que je n&amp;#39;avais pas vu depuis 10 ans : beaucoup d&amp;#39;histoires à se raconter. Et les toulousains que je rencontre régulièrement aux apéroweb étaient là aussi, fidèles au postes. (Et une bonne partie dans le staff de SudWeb)&lt;/p&gt;

&lt;h3&gt;Vendredi : conférences&lt;/h3&gt;

&lt;p&gt;Les conférences s&amp;#39;enchainent, certaines me semblent plus passionnantes que d&amp;#39;autres, mais cela ne me choque pas : il en faut pour tous les goûts.&lt;/p&gt;

&lt;p&gt;Des moments forts m&amp;#39;ont marqués :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;L&amp;#39;utilisation de canard en plastique durant le développement.&lt;/li&gt;
&lt;li&gt;L&amp;#39;amour pour IE de Bruce Lawson (travaillant chez Opéra). Et je suis d&amp;#39;accord avec lui : IE6 a forgé le monde du web actuel.&lt;/li&gt;
&lt;li&gt;Les conférences courtes menées tambour battant par des orateurs comptant les mots et le temps.&lt;/li&gt;
&lt;li&gt;Une discussion entendue entre deux personnes en début d&amp;#39;après-midi. Reprise dans une conférence moins d&amp;#39;une heure après, sans qu&amp;#39;il l&amp;#39;ait entendue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et autour de cela, une organisation aux petits oignons, que ce soit l&amp;#39;accueil, les repas, les casques pour les traductions...&lt;/p&gt;

&lt;p&gt;Le soir avait lieu le repas communautaire : un grand moment pour rencontrer, échanger, discuter de tout et de rien. J&amp;#39;ai entendu parler de serveurs, de qualité, de web, de php, de télé 3D...&lt;/p&gt;

&lt;p&gt;Certains ont commencé à planifier leur journée du samedi ce soir là, pour être sur de ne rien rater.&lt;/p&gt;

&lt;h3&gt;Samedi : ateliers&lt;/h3&gt;

&lt;p&gt;Le ateliers/conférences du samedi étaient au top également. Du haut niveau, et mon principale regret et de ne pas pouvoir les suivre tous en même temps. Il fallait choisir, mais il était possible de changer d&amp;#39;atelier en plein milieu.&lt;/p&gt;

&lt;p&gt;Mon programme à moi :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ajoutez du sens à vos page web avec les microdonnées par Corinne Schillinger&lt;/li&gt;
&lt;li&gt;Le Web au doigt et à l’œil avec CasperJS par Nicolas Perriault (le créateur de CasperJs)&lt;/li&gt;
&lt;li&gt;CSS : hier, aujourd’hui et demain par Bert Bros (Co créateur du CSS)&lt;/li&gt;
&lt;li&gt;Comment tester la qualité d’un projet en constante évolution, que j&amp;#39;ai animé.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chaque atelier était différent : certains étaient menés comme une présentation pour commencer, d&amp;#39;autres était 100% mise en pratique.&lt;/p&gt;

&lt;p&gt;L&amp;#39;important était les échanges sur le sujet, et j&amp;#39;ai l&amp;#39;impression d&amp;#39;avoir réussi pour mon atelier. Une dizaine de personnes sont passées m&amp;#39;écouter, avoir des informations. Pouvoir montrer ce qu&amp;#39;on a mis en place dans ma boîte était une bonne base de départ :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/sudweb.png&quot; alt=&quot;Sudweb 2012&quot; title=&quot;Sudweb&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Mes regrets&lt;/h3&gt;

&lt;p&gt;En 2011, j&amp;#39;avais longtemps hésité pour SudWeb à Nîmes. Cette année, je n&amp;#39;ai pas hésité, et j&amp;#39;ai bien fait d&amp;#39;y aller. J&amp;#39;ai du chercher longtemps ce qui m&amp;#39;avait gêné durant ces journées bien chargées.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;La chaleur à Toulouse. (Et ca continue après SudWeb)&lt;/li&gt;
&lt;li&gt;La planification des ateliers : j&amp;#39;ai changé 2 fois d&amp;#39;horaires et de salle. Un peu plus de stabilité n&amp;#39;aurait pas fait de mal&lt;/li&gt;
&lt;li&gt;Mon stress avant de présenter un atelier à des gens que je ne connaissais pas.&lt;/li&gt;
&lt;li&gt;Je n&amp;#39;ai pas pu parler autant que j&amp;#39;aurais voulu à toutes les personnes que j&amp;#39;aurais voulu : trop de monde, pas assez de temps&lt;/li&gt;
&lt;li&gt;Durant 2 jours : tout le monde ne parle que qualité, perfection, nouvelle technologie, bonnes pratiques... Le retour à la réalité est &amp;quot;douloureux&amp;quot;. (Et encore, j&amp;#39;ai de la chance, les bonnes pratiques et les tests sont déjà en place chez nous)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Notre équipe va utiliser certaines connaissances &amp;quot;découvertes&amp;quot; durant ces 2 jours bientôt, sur notre projet. Je regrette presque que cela soit déjà fini, et qu&amp;#39;il faudra attendre un an avant le prochain.&lt;/p&gt;

&lt;p&gt;Pour garder l&amp;#39;esprit &amp;quot;SudWeb&amp;quot; jusqu&amp;#39;à l&amp;#39;an prochain, je vais sûrement retourner à des apéro web toulousains dans les prochains mois ;)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Les tests sont comme une boite de chocolats</title>
   <link href="http://blog.fabricebournisien.eu///2012/05/23/les-tests-sont-comme-une-boite-de-chocolat/"/>
   <updated>2012-05-23T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/05/23/les-tests-sont-comme-une-boite-de-chocolat</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;Testing is like a box of chocolates. You never know what you’re gonna get.
&lt;br/&gt; Peter Shih&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/chocolats.jpg&quot; title=&quot;Boite de chocolats&quot; style=&quot;width: 350px; float: left;&quot;/&gt;
&lt;img src=&quot;/public/pictures/2012/forrest-gump.jpg&quot; title=&quot;Forrest Gump&quot; style=&quot;width: 350px; float: left;&quot;/&gt;
&lt;p style=&quot;clear: both;&quot;&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Je suis tout à fait d&amp;#39;accord avec lui. Quand on met en place des tests automatiques ou qu&amp;#39;on teste manuellement une nouvelle fonctionnalité, on ne sait jamais ce qu&amp;#39;il va se passer.&lt;/p&gt;

&lt;p&gt;On peut tout avoir :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tout fonctionne, et tout s&amp;#39;affiche parfaitement&lt;/li&gt;
&lt;li&gt;Une partie ne fonctionne pas, bloquant une partie des tests.&lt;/li&gt;
&lt;li&gt;L&amp;#39;affichage est décalé (avec parfois des problèmes en cascade)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Du coup, rien ne se ressemble : chaque nouveau test permet d&amp;#39;être surpris, et de devoir réflechir en profondeur pour assurer la stabilité du produit testé. (Qu&amp;#39;il soit logiciel ou matériel d&amp;#39;ailleurs)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Valider un thème</title>
   <link href="http://blog.fabricebournisien.eu///2012/05/07/valider-un-theme/"/>
   <updated>2012-05-07T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/05/07/valider-un-theme</id>
   <content type="html">&lt;h3&gt;Choisir un thème&lt;/h3&gt;

&lt;p&gt;Lorsqu&amp;#39;on crée son blog, on regarde souvent les fonctionnalités de l&amp;#39;outil, mais on est surtout intéressé par le thème.&lt;/p&gt;

&lt;p&gt;Chacun a une attente particulière d&amp;#39;un thème : on a tous une couleur préférée, un sujet de prédilection (cuisine, technologie, voiture...). Certains aiment également ajouter un tas de widgets facilement, ou pouvoir le personnaliser en changeant une couleur ou une image. Cela permet de se sentir chez soi.&lt;/p&gt;

&lt;p&gt;Dans la nouvelle version d&amp;#39;OverBlog, l&amp;#39;utilisateur peut choisir son design, changer les options prévues dans le thème, mais également modifier le html, le css, afin d&amp;#39;avoir un thème qui correspond exactement à ce que l&amp;#39;on veut.&lt;/p&gt;

&lt;h3&gt;Et la qualité ?&lt;/h3&gt;

&lt;p&gt;Lorsqu&amp;#39;un nouveau thème est créé pour être proposé aux blogueurs, en tant que responsable qualité, je dois vérifier qu&amp;#39;il s&amp;#39;affiche correctement sur tous les navigateurs, avec toute sorte de contenus. Sans parler d&amp;#39;avoir les options qui permettent de plaire au plus grand nombre.&lt;/p&gt;

&lt;p&gt;Lorsque nous avons ajouté les premiers thèmes, j&amp;#39;ai testé manuellement beaucoup de choses, refait les mêmes tests plusieurs fois. Avec le recul, je pense même n&amp;#39;avoir pas fait les mêmes tests sur chaque thème.&lt;/p&gt;

&lt;p&gt;L&amp;#39;équipe ayant augmenté la cadence de livraison de thèmes, il y a de plus en plus de thèmes à tester.&lt;/p&gt;

&lt;p&gt;Au delà de ça, l&amp;#39;équipe ajoute régulièrement de nouvelles fonctions utilisables dans les thèmes (ex : une fonction article suivant / précédent). Il faut alors faire modifer les anciens thèmes, les tester à nouveau...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/checklist.jpg&quot; alt=&quot;Checklist&quot; title=&quot;Checklist point par point&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Tests en équipe&lt;/h3&gt;

&lt;p&gt;Du retard s&amp;#39;étant accumulé dans les tests, j&amp;#39;ai décidé de faire participer l&amp;#39;équipe aux tests. Pour cela, j&amp;#39;ai préparé un document comportant une centaine de points à vérifier pour chaque thème, plus ou moins précis.&lt;/p&gt;

&lt;p&gt;Certains points sont issus de tests précédents, de bugs s&amp;#39;étant déjà produits. D&amp;#39;autres sont issus de connaissances accumulées dans le domaine depuis de longues années.&lt;/p&gt;

&lt;p&gt;Chaque membre de l&amp;#39;équipe a choisi un thème (en veillant à ne jamais tester un thème que l&amp;#39;on a soi-même créé: le test ne saurait être fiable dans ces conditions). Ne restait alors plus qu&amp;#39;à vérifier la checklist.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/checklist_equipe.jpg&quot; alt=&quot;Checklist en équipe&quot; title=&quot;Checklist en parrallèle&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Checklist : SEO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Titre du blog sur la home, de préférence en h1&lt;/li&gt;
&lt;li&gt;Description du blog affichée sur la home&lt;/li&gt;
&lt;li&gt;Pas de répétition abusive du titre et de la description du blog&lt;/li&gt;
&lt;li&gt;Sur une page d&amp;#39;article, le titre et le lien vers l&amp;#39;article ne sont pas répétés&lt;/li&gt;
&lt;li&gt;Le title de la page d&amp;#39;accueil inclut le titre du blog&lt;/li&gt;
&lt;li&gt;Le title d&amp;#39;une page d&amp;#39;article contient le titre de l&amp;#39;article&lt;/li&gt;
&lt;li&gt;Le title d&amp;#39;une recherche contient le keyword&lt;/li&gt;
&lt;li&gt;Le title d&amp;#39;une catégorie contient la catégorie&lt;/li&gt;
&lt;li&gt;La meta description contient la description du blog sur la home&lt;/li&gt;
&lt;li&gt;La meta description contient l&amp;#39;extrait de l&amp;#39;article sur les pages &amp;quot;article seul&amp;quot;&lt;/li&gt;
&lt;li&gt;Les widgets et les articles ont des titres de forme h* (h2, h3...)&lt;/li&gt;
&lt;li&gt;Le flux RSS est renseigné et l&amp;#39;url est juste&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Checklist : ergonomie&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Le titre est cliquable et renvoie sur l&amp;#39;accueil&lt;/li&gt;
&lt;li&gt;L&amp;#39;attribut title du titre du blog contient la description du blog&lt;/li&gt;
&lt;li&gt;L&amp;#39;attribut title du titre des articles contient un extrait de l&amp;#39;article&lt;/li&gt;
&lt;li&gt;Il y a un lien vers la page contact&lt;/li&gt;
&lt;li&gt;Le champ de recherche a un placeholder&lt;/li&gt;
&lt;li&gt;Un message apparait quand il n&amp;#39;y a pas de résultat&lt;/li&gt;
&lt;li&gt;Lors d&amp;#39;une recherche, les articles sans titre peuvent être ouverts&lt;/li&gt;
&lt;li&gt;Les tags sont affichés par leurs noms, pas par leur url&lt;/li&gt;
&lt;li&gt;Les suites de tags sont séparées par un élément visuel : # , /&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Checklist : webperf&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Vérifier que les js chargés sont en nombre limité&lt;/li&gt;
&lt;li&gt;Si une option permet de désactiver une fonction, le JS associé est désactivé&lt;/li&gt;
&lt;li&gt;Les js qui le peuvent sont placés en pied de page&lt;/li&gt;
&lt;li&gt;Poids total de la page inférieur à 3 Mo&lt;/li&gt;
&lt;li&gt;Pas d&amp;#39;erreur 404 dans les fichiers / images&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Checklist : options du thème&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Prévoir une option article complet / extrait&lt;/li&gt;
&lt;li&gt;Pas de lien &amp;quot;en dur&amp;quot; vers une url interne à créer par le blogueur&lt;/li&gt;
&lt;li&gt;Pas de saisie inutile de valeur&lt;/li&gt;
&lt;li&gt;Ne pas hésiter à faire changer les couleurs principales du thème&lt;/li&gt;
&lt;li&gt;Si une image est utilisée &amp;quot;par défaut&amp;quot;, permettre de la changer&lt;/li&gt;
&lt;li&gt;Permettre de choisir les modules à afficher / masquer&lt;/li&gt;
&lt;li&gt;Penser à l&amp;#39;ajout des comptes de réseaux sociaux&lt;/li&gt;
&lt;li&gt;Les options ont des valeurs par défaut&lt;/li&gt;
&lt;li&gt;Le type des options est adapté&lt;/li&gt;
&lt;li&gt;Prévoir l&amp;#39;ajout de Google analytics / webmaster tools / msn tools&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Checklist : widgets&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Prévoir un module listant les pages&lt;/li&gt;
&lt;li&gt;Prévoir un module affichant la biographie de l&amp;#39;auteur, sa ville, son pseudo&lt;/li&gt;
&lt;li&gt;Dans le module &amp;quot;bprofil&amp;quot;io&amp;quot;, afficher lien + logo vers les réseaux sociaux&lt;/li&gt;
&lt;li&gt;Prévoir un module archive, affichant les années, interactivité pour afficher les mois&lt;/li&gt;
&lt;li&gt;Prévoir un module tags, qui affiche les tags.d&amp;#39;utilisation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Checklist : article&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Informations de base affichées : titre, date, auteur, tags&lt;/li&gt;
&lt;li&gt;Les images des sections texte sont alignées correctement&lt;/li&gt;
&lt;li&gt;Mise en page correcte : listes (puce + numérotées)&lt;/li&gt;
&lt;li&gt;Mise en page correcte : gras, italique, del, liens&lt;/li&gt;
&lt;li&gt;Mise en page correcte : titres, preformatted&lt;/li&gt;
&lt;li&gt;La section image prend la largeur maximale disponible&lt;/li&gt;
&lt;li&gt;Ajouter une &amp;quot;fancybox&amp;quot; ou script assimilé pour zoomer sur les images&lt;/li&gt;
&lt;li&gt;Le slideshow fonctionne dans la section image&lt;/li&gt;
&lt;li&gt;Les vidéos ne sont pas coupées en largeur&lt;/li&gt;
&lt;li&gt;Le player de musique s&amp;#39;affiche et fonctionne&lt;/li&gt;
&lt;li&gt;Pour une section lien, le lien, la vignette, l&amp;#39;extrait sont placés correctement&lt;/li&gt;
&lt;li&gt;Les citations apparaissent de façon à ressortir&lt;/li&gt;
&lt;li&gt;L&amp;#39;auteur d&amp;#39;une citation est affiché clairement&lt;/li&gt;
&lt;li&gt;Les cartes s&amp;#39;affichent entièrement&lt;/li&gt;
&lt;li&gt;Le curseur indique qu&amp;#39;on peut cliquer sur la carte&lt;/li&gt;
&lt;li&gt;Pour les sections image, vidéos, musique, carte... la description est alignée avec le contenu&lt;/li&gt;
&lt;li&gt;Une suite de sections s&amp;#39;affiche correctement&lt;/li&gt;
&lt;li&gt;Les articles sans titre peuvent être visités (ajout d&amp;#39;un lien &amp;quot;Read more&amp;quot;...)&lt;/li&gt;
&lt;li&gt;Les articles venant de Twitter s&amp;#39;affichent correctement&lt;/li&gt;
&lt;li&gt;Les articles venant de FB s&amp;#39;affichent correctement (image, texte..)&lt;/li&gt;
&lt;li&gt;L&amp;#39;article dispose d&amp;#39;options de partage (Twitter, FB, G+, Pinterest...)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Checklist : autres contenus&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Sur une page d&amp;#39;article seul, on affiche les commentaires&lt;/li&gt;
&lt;li&gt;Sur une page d&amp;#39;accueil, on affiche une information pour indiquer les commentaires&lt;/li&gt;
&lt;li&gt;La zone de commentaire apparait dans toute sa largeur&lt;/li&gt;
&lt;li&gt;Si les commentaires sont désactivés, pas de lien / d&amp;#39;affichage des commentaires&lt;/li&gt;
&lt;li&gt;Sur les pages listant les articles (accueil, recherche, tags...), afficher la pagination&lt;/li&gt;
&lt;li&gt;Quand on passe sur la page 2, ce sont les articles suivants qui apparaissent&lt;/li&gt;
&lt;li&gt;Sur une page d&amp;#39;article, afficher un lien vers l&amp;#39;article suivant / précédent&lt;/li&gt;
&lt;li&gt;La page de contact s&amp;#39;affiche correctement&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Checklist : divers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Si le design est responsive, cela fonctionne&lt;/li&gt;
&lt;li&gt;Les textes affichés passent par la fonction de langue (permet la traduction du thème)&lt;/li&gt;
&lt;li&gt;Pas de textes localisés dans les images (pour faciliter le changement de langue)&lt;/li&gt;
&lt;li&gt;Affichage parfait sur IE9&lt;/li&gt;
&lt;li&gt;Affichage correct sur IE8&lt;/li&gt;
&lt;li&gt;Affichage parfait sur Chrome&lt;/li&gt;
&lt;li&gt;Affichage parfait sur Firefox&lt;/li&gt;
&lt;li&gt;Affichage correct sur Safari&lt;/li&gt;
&lt;li&gt;Les options de commentaires (Disqus, Facebook..) fonctionnent&lt;/li&gt;
&lt;li&gt;Les options des widgets sociaux fonctionnent&lt;/li&gt;
&lt;li&gt;Les options de thèmes fonctionnent pour changer l&amp;#39;apparence : couleurs, police...&lt;/li&gt;
&lt;li&gt;Les autres options sont opérationnelles.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Tests automatiques : watir</title>
   <link href="http://blog.fabricebournisien.eu///2012/05/06/tests-automatiques-watir/"/>
   <updated>2012-05-06T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/05/06/tests-automatiques-watir</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://watirwebdriver.com/&quot;&gt;Watir-webdriver&lt;/a&gt; est une librairie qui permet de contrôler le navigateur : vous écrivez un code qui vous permet de simuler le comportement d&amp;#39;un utilisateur. Cela vous permet d&amp;#39;automatiser des tests, afin de pouvoir les effectuer systématiquement, sans intervention humaine.
Voici une petite demonstration de watir-webdriver. Basique, il vérifie uniquement que le lien contact est bien présent, et que le mot &lt;strong&gt;qualité&lt;/strong&gt; apparait sur la page.&lt;/p&gt;

&lt;iframe width=&quot;640&quot; height=&quot;480&quot; src=&quot;//www.youtube.com/embed/E6s4-m2U8b4?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# lutte contre : web.rb:3:in `require&#39;: no such file to load -- watir (LoadError)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rubygems&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# chargement de la libraire watir&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;watir-webdriver&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ouvrir un navigateur&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resize_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Ouvrir le site&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://web-quality.over-blog.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Clignotement&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Contact&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;flash&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Vérifier que le mot qualité est présent&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Qualite&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Test Qualite KO&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Test Qualite OK&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Fermeture&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour résumer :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;on charge les libraires adéquates&lt;/li&gt;
&lt;li&gt;on ouvre un navigateur&lt;/li&gt;
&lt;li&gt;on va sur le site web à tester&lt;/li&gt;
&lt;li&gt;on effectue des actions et/ou de tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et voilà, le tour est joué. Ce code basique ne sera jamais utilisé tel quel : afficher un message d&amp;#39;erreur suffit pour quelques tests, qui prennent peu de temps. Mais pour des tests nombreux et longs, il faut pouvoir disposer d&amp;#39;un rapport d&amp;#39;erreur détaillé, etc.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>La qualité web, c'est quoi ?</title>
   <link href="http://blog.fabricebournisien.eu///2012/05/04/la-qualite-web-c-est-quoi/"/>
   <updated>2012-05-04T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/05/04/la-qualite-web-c-est-quoi</id>
   <content type="html">&lt;p&gt;Lorsqu&amp;#39;un visiteur se promène sur internet, à la recherche d&amp;#39;informations, de produits etc... il ne voit pas ce qui se passe derrière le site web :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Il ne connait pas le langage HTML&lt;/li&gt;
&lt;li&gt;Il ne connait pas les différences de navigateurs&lt;/li&gt;
&lt;li&gt;Il ne sait pas ce qu&amp;#39;est un problème de charge&lt;/li&gt;
&lt;li&gt;Il ne sait pas ce qu&amp;#39;est la norme du w3c&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Par contre, ce qu&amp;#39;il sait, c&amp;#39;est que le site s&amp;#39;affiche mal sur son écran, que le bouton ne fonctionne pas, qu&amp;#39;il ne peut pas créer son compte ou qu&amp;#39;il ne peut pas passer sa commande. Pour lui, c&amp;#39;est un défaut, un bug. C&amp;#39;est une déception pour lui, et il pourrait ne jamais valider sa commande, ou venir à nouveau sur votre site.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/erreur1.jpg&quot; title=&quot;Certificat erroné&quot; style=&quot;height: 150px; float: left;&quot;/&gt;
&lt;img src=&quot;/public/pictures/2012/erreur2.jpg&quot; title=&quot;Serveur introuvable&quot; style=&quot;height: 150px; float: left;&quot;/&gt;
&lt;img src=&quot;/public/pictures/2012/erreur3.jpg&quot; title=&quot;Erreur 404&quot; style=&quot;height: 150px; float: left;&quot;/&gt;
&lt;p style=&quot;clear: both;&quot;&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Pour faire un site web de qualité, plusieurs choses à respecter : il faut être au courant de toutes les normes (HTML, CSS, JS), des dernières mises à jour des navigateurs, et de leurs limites.&lt;/p&gt;

&lt;p&gt;Et bien évidemment, il faut tester en permanence le site pour s&amp;#39;assurer que les nouveautés fonctionnent, mais également pour vérifier que ce qui existait déjà n&amp;#39;a pas été &amp;quot;cassé&amp;quot; par les nouveaux développements.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>L'environnement et les tests</title>
   <link href="http://blog.fabricebournisien.eu///2012/02/09/l-environnement-et-les-tests/"/>
   <updated>2012-02-09T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/02/09/l-environnement-et-les-tests</id>
   <content type="html">&lt;p&gt;Cet article n&amp;#39;a rien à voir avec l&amp;#39;écologie, mais beaucoup avec l&amp;#39;&lt;a href=&quot;http://fr.wikipedia.org/wiki/Environnement_%28homonymie%29#Informatique&quot;&gt;environnement&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lorsque l&amp;#39;on teste un projet web, il faut toujours savoir &amp;quot;où&amp;quot; nous testons : est-on sur un serveur de test ? de développement ? de pré-prod ? de production ?&lt;/p&gt;

&lt;p&gt;Lorsque vous êtes en pleine création d&amp;#39;un projet, il est intéressant de définir clairement, le plus tôt possible, les différents environnements et leurs stratégies de tests respectives.&lt;/p&gt;

&lt;p&gt;L&amp;#39;intégration continue sera d&amp;#39;autant plus simple que vous aurez défini clairement les règles du jeu.&lt;/p&gt;

&lt;h3&gt;Environnements pour un projet web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Environnement de pré-prod : ce serveur doit être stable, mis à jour très régulièrement, comporter toutes les nouveautés.&lt;/li&gt;
&lt;li&gt;Environnement de développement : utilisé par tous les développeurs, il peut être soit centralisé, soit individuel (avec des machines virtuelles).&lt;/li&gt;
&lt;li&gt;Environnement de prod : c&amp;#39;est le serveur qui sera utilisé par vos utilisateurs/clients. Il doit être choyé, aux petits oignons.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Comment organiser le travail (du point de vue de la qualité)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Les développeurs codent sur le serveur de dév.&lt;/li&gt;
&lt;li&gt;Les tests unitaires (côté php ou js) sont aussi jouer sur le serveur de développement.&lt;/li&gt;
&lt;li&gt;L&amp;#39;environnement de préprod est posé en tant que référent : il est mis à jour régulièrement, avec des versions stables. Pour contrôler sa mise à jour, un outil d&amp;#39;intégration continu (nous utilisons hudson) qui rejoue tous les tests unitaires de tous les sous projets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Comment organiser les tests fonctionnels&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Pour les tests manuels, en fonction du test, il faut le faire sur l&amp;#39;un des environnements. Il est parfois utile de le faire sur chaque environnement, afin de pouvoir dire &amp;quot;ce bug particulier n&amp;#39;existe pas encore en prod, mais il est apparut sur la pré prod&amp;quot;.&lt;/li&gt;
&lt;li&gt;L&amp;#39;environnement de prod peut être utilisé pour vérifier la présence d&amp;#39;un bug, mais ne devrait pas être utilisé pour des tests automatiques.&lt;/li&gt;
&lt;li&gt;Pour les tests automatiques, il y a 2 écoles: 
Lancer sur la version de pré-prod. Défaut principal : il n&amp;#39;est pas toujours évident de créer des tests fonctionnels avant de voir la fonction tourner réellement. Chaque nouvelle fonctionnalité aura donc ses tests ajoutés dans les jours qui suivront, et pas avant.
Faire lancer les tests par les développeurs en environnement de développement. C&amp;#39;est plus coûteux à mettre en place (il faut par exemple former tous les développeurs à l&amp;#39;analyse du rapport de tests...), mais cela peut améliorer la détection des bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour moi, ces deux écoles ne s&amp;#39;excluent pas. Je les vois plutôt comme des étapes. C&amp;#39;est d&amp;#39;ailleurs le cas dans ma société : lors de la refonte du projet, il a été décidé que les tests fonctionnels automatiques devront pouvoir s&amp;#39;exécuter partout (y compris la prod). Pour l&amp;#39;instant, ils peuvent être exécuter sur la pré prod, avec une configuration prévue théoriquement pour qu&amp;#39;ils puissent être exécuter sur d&amp;#39;autres environnements. (La gestion de profils de cucumber est parfaite pour ça)&lt;/p&gt;

&lt;h3&gt;Pourquoi est-il essentiel de connaître les environnements ?&lt;/h3&gt;

&lt;p&gt;Il m&amp;#39;arrive régulièrement de tester un bug sur un onglet, de faire autre chose, et de revenir dans mon onglet pour avoir d&amp;#39;autres informations au sujet des bugs. Et là, miracle, le bug est résolu. Pourtant, personne n&amp;#39;a modifié le code. Un enquête de quelques minutes permet de comprendre que le bug n&amp;#39;existe que dans un environnement particulier, et que j&amp;#39;ai changé d&amp;#39;onglet par inadvertance.&lt;/p&gt;

&lt;p&gt;Cela peut avoir des conséquences plus grave. Pour un projet personnel, j&amp;#39;héberge un forum &amp;quot;privé&amp;quot;. J&amp;#39;ai l&amp;#39;habitude de &amp;quot;stocker&amp;quot; ce forum sur mes sites successifs, dans un sous-domaine, et de faire suivre aux utilisateurs la nouvelle adresse, voire de mettre en place une redirection.&lt;/p&gt;

&lt;h3&gt;Erreur d&amp;#39;environnement&lt;/h3&gt;

&lt;p&gt;En novembre dernier, j&amp;#39;ai lancé un déménagement. (La qualité de service de mon hébergeur devenait déplorable avec un uptime passant parfois sous les 90%)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Je verrouille l&amp;#39;accès en écriture sur l&amp;#39;ancien&lt;/li&gt;
&lt;li&gt;Je déplace la totalité des fichiers d&amp;#39;un serveur à un autre, tranquillement.&lt;/li&gt;
&lt;li&gt;Je copie la base de données.&lt;/li&gt;
&lt;li&gt;Je teste avec quelques utilisateurs le nouveau.&lt;/li&gt;
&lt;li&gt;Fin de l&amp;#39;opération.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jusqu&amp;#39;à ce matin, lorsque j&amp;#39;ai vu un message d&amp;#39;erreur &amp;quot;Can&amp;#39;t connect to MySQL server on anciendomaine.com&amp;quot;. J&amp;#39;ai mal lu le message, et n&amp;#39;ai pas fait attention, et j&amp;#39;ai attendu quelques minutes, pensant à une maintenance sur mon hébergeur. Puis j&amp;#39;ai fini par réaliser que sur mon nouveau domaine, opérationnel depuis 4 mois, la base de données utilisée était toujours l&amp;#39;ancienne. Du coup, nouvelle copie des bases de données, modification du fichier config.php qui contenait les données pour la base, et voilà, tout est rentré dans l&amp;#39;ordre.&lt;/p&gt;

&lt;p&gt;Si mon ancien domaine (et sa base) avait expiré avant que je m&amp;#39;en rende compte, j&amp;#39;aurais perdu une partie de l&amp;#39;historique. Pour un petit forum privé, cela n&amp;#39;aurait pas été trop grave. Mais pour un projet plus important, cela aurait pu provoquer des catastrophes.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>L’esprit d’équipe autour de la qualité</title>
   <link href="http://blog.fabricebournisien.eu///2012/01/04/l-esprit-d-equipe-autour-de-la-qualite/"/>
   <updated>2012-01-04T00:00:00+01:00</updated>
   <id>http://blog.fabricebournisien.eu//2012/01/04/l-esprit-d-equipe-autour-de-la-qualite</id>
   <content type="html">&lt;h3&gt;Contexte&lt;/h3&gt;

&lt;p&gt;La société pour laquelle je travaille est en train de refaire son principal projet depuis le début. Au programme : changement de technologies. Nous lancerons ce nouveau projet d’ici l’été, et nous travaillons déjà depuis quelques mois sur le sujet.&lt;/p&gt;

&lt;p&gt;Nous avons mis en avant la qualité, avec de l’intégration continue (&lt;a href=&quot;http://hudson-ci.org/&quot;&gt;Hudson&lt;/a&gt;, allié à &lt;a href=&quot;http://fr.wikipedia.org/wiki/Git&quot;&gt;Git&lt;/a&gt;), des TDD (Test driven development), des framework robustes : &lt;a href=&quot;http://www.symfony-project.org/&quot;&gt;Symfony&lt;/a&gt; pour le php, &lt;a href=&quot;http://developer.yahoo.com/yui/&quot;&gt;YUI&lt;/a&gt; pour le javascript, des tests fonctionnels avec cucumber et watir… Et pour organiser tout ça, on passe à &lt;a href=&quot;http://fr.wikipedia.org/wiki/Scrum&quot;&gt;Scrum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Beaucoup de changements, et les premiers tests sur le serveur de staging nous ont tous donné envie d’aller encore plus loin.&lt;/p&gt;

&lt;h3&gt;Action&lt;/h3&gt;

&lt;p&gt;Mais tout n’est pas rose dans notre monde : le serveur de staging n’était pas assez stable à mon goût. J’ai donc envoyé un mail à tous mes collègues concernés afin de mettre au clair la façon de travailler :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pas de mise à jour en milieu de journée (le staging est mis à jour chaque nuit avec les dernières versions stables des sous projets).&lt;/li&gt;
&lt;li&gt;Tests en amont, côté serveur de développement.&lt;/li&gt;
&lt;li&gt;Incitation à me consulter pour la mise en place des tests fonctionnels que j’aurais pu oublier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et bien évidemment, j’ai précisé dans le mail que j’étais ouvert à toutes les suggestions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/pictures/2012/equipe.jpg&quot; alt=&quot;Travail d&amp;#39;équipe&quot; title=&quot;Travail d&amp;#39;équipe&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Réactions&lt;/h3&gt;

&lt;p&gt;Nous avions longuement rabâché qu’il fallait un produit de qualité, que nous devions tous tester le produit de façon à ne rien laisser passer.&lt;/p&gt;

&lt;p&gt;En envoyant le mail, je ne m’attendais pas aux retours que j’ai eu. Je savais que certains point “techniques” ne feraient pas l’unanimité. Mais mes collègues ont été très intéressés, et m’ont montré qu’ils pensaient toujours “qualité”. L’équipe a échangé pas mal de mail dans l’après-midi (cela faisait quelques semaines que je n’avais pas vu autant d’échange de mails sur un même sujet en aussi peu de temps). Des idées sont venus des développeurs, qui rejoignaient certaines idées d’améliorations que nous envisagions à moyen terme.&lt;/p&gt;

&lt;p&gt;Tout cela pour dire qu’au final, la qualité d’un projet web, c’est aussi une histoire d’équipe : une équipe soudée, motivée peut faire de grandes choses dans le bon sens si on lui en donne l’opportunité.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cucumber : des tests plus simples pour tous</title>
   <link href="http://blog.fabricebournisien.eu///2011/10/25/cucumber-tests-simples-pour-tous/"/>
   <updated>2011-10-25T00:00:00+02:00</updated>
   <id>http://blog.fabricebournisien.eu//2011/10/25/cucumber-tests-simples-pour-tous</id>
   <content type="html">&lt;p&gt;Mettre régulièrement à jour ses batteries de tests est indispensable.&lt;/p&gt;

&lt;p&gt;Cela permet de découvrir un test qui ne fonctionne plus, d&amp;#39;optimiser le comportement des tests. Parfois, on intègre une nouvelle technologie qui change tout dans la façon de tester.&lt;/p&gt;

&lt;h3&gt;Mise à jour des tests&lt;/h3&gt;

&lt;p&gt;Pour mettre à jour mes tests, j&amp;#39;ai décidé de repartir de zéro. De réflexions en réflexions, j&amp;#39;en était arrivé à me poser des questions (existentielles) du genre :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Est-ce que je peux envisager de créer des Tests Unitaires pour tester que mes tests testent bien ?&lt;/li&gt;
&lt;li&gt;Pour éviter de toujours refaire la même chose, il faudrait que je crée des &amp;quot;primitives&amp;quot; à réutiliser partout. Comment les gérer au mieux ?&lt;/li&gt;
&lt;li&gt;Avec ces primitives, je pourrais envisager de créer des tests dans toutes les langues du site de façon très rapide...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Après quelques tests d&amp;#39;outils, etc, j&amp;#39;en suis arrivé aux conclusions suivantes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Le système de primitive existe. Il s&amp;#39;appelle Cucumber. J&amp;#39;avais parlé succintement de Cucumber lors d&amp;#39;une présentation que j&amp;#39;ai faite lors d&amp;#39;un apéroweb Toulouse. Pour résumer, Cucumber permet de rédiger les scénarios en anglais, simplifiant ainsi la création et la mise à jour de test.&lt;/li&gt;
&lt;li&gt;Créer des tests unitaires de mes tests fonctionnels automatisés ne me garantirait pas qu&amp;#39;ils détectent les bugs. Pour cela, il faut un oeil humain, qui lance les tests, vérifient, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Nouvelle configuration&lt;/h3&gt;

&lt;p&gt;Je suis donc passé de Watir / Webdriver à Cucumber / Watir / Wedriver pour les tests. Nouvelle organisation, nouvelle façon de lancer les tests, etc. Après un mois d&amp;#39;utilisation, je vois déjà des avancées :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;La réutilisation des primitives est un énorme gain de temps&lt;/li&gt;
&lt;li&gt;La lecture d&amp;#39;un scénario de test est possible pour tout le monde. Il en va de même pour leur écriture (à faire relire / adapter par le responsable qualité tout de même)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici un petit exemple fait maison, on en trouve une quantité sur le net.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fichier features/webQualiteBlog.feature&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cucumber&quot; data-lang=&quot;cucumber&quot;&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; WeQualite Blog
Generic tests about my blog
@portal
&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; First page of blog
    &lt;span class=&quot;nf&quot;&gt;When&lt;/span&gt; I go to &lt;span class=&quot;s&quot;&gt;&quot;web-quality.over-blog.com&quot;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;Then&lt;/span&gt; I shouldn&#39;t see errors
    &lt;span class=&quot;nf&quot;&gt;And&lt;/span&gt; page should contain &lt;span class=&quot;s&quot;&gt;&quot;Web qualité&quot;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;And&lt;/span&gt; page should contain &lt;span class=&quot;s&quot;&gt;&quot;Dieu du web&quot;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;@portal&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;@google&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Verify blog is in first page of google search
    &lt;span class=&quot;nf&quot;&gt;When&lt;/span&gt; I go to &lt;span class=&quot;s&quot;&gt;&quot;www.google.fr&quot;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;And&lt;/span&gt; I search &lt;span class=&quot;s&quot;&gt;&quot;web-qalite&quot;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;Then&lt;/span&gt; page should contain &lt;span class=&quot;s&quot;&gt;&quot;Beaucoup d&#39;outil de tests&quot;&lt;/span&gt; 
    &lt;span class=&quot;nf&quot;&gt;And&lt;/span&gt; page should contain &lt;span class=&quot;s&quot;&gt;&quot;web-quality.over-blog.com&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/public/pictures/2011/cucumber-first.jpg&quot; alt=&quot;Résultats de l&amp;#39;éxecution&quot; title=&quot;Sous Windows, la coloration syntaxique est possible grâce à AnsiColor&quot;&gt;&lt;/p&gt;

&lt;p&gt;On voit que cucumber nous donne directement les primitives (step definitions) à gérer pour compléter les tests. C&amp;#39;est à la fois pratique, mais peut devenir source de problèmes. Si une primitive est sensé être déjà codée, il faut vérifier la syntaxe, l&amp;#39;appel du fichier etc..&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fichier features/step_definitions/common.rb&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;rubygems&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;watir-webdriver&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;caps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Remote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Capabilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;htmlunit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Watir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:remote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:desired_capabilities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;caps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^I go to &quot;([^&quot;]*)&quot;$/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^I shouldn&#39;t see errors$/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Call Stack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Erreur 404&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Erreur 50&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Page Web introuvable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;Undefined &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Trying to&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cette page n&#39;est pas accessible&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;Warning &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Fatal exception&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Syntax error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^page should contain &quot;([^&quot;]*)&quot;$/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BROWSER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/public/pictures/2011/cucumber-first.jpg&quot; alt=&quot;Résultats de l&amp;#39;éxecution&quot; title=&quot;Ca marche (ou pas)&quot;&gt;&lt;/p&gt;

Explication de l&amp;#39;affichage&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;En rouge : les primitives ne s&amp;#39;étant pas bien passés.&lt;/li&gt;
&lt;li&gt;En bleu : les primitives n&amp;#39;ayant pas été exécutés (une étape précédente a échoué).&lt;/li&gt;
&lt;li&gt;En marron: les primitives n&amp;#39;étant pas définies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Optimisations&lt;/h3&gt;

&lt;p&gt;J&amp;#39;ai déjà un peu d&amp;#39;expérience, et j&amp;#39;ai déjà intégré des optimisations directement dans l&amp;#39;exemple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Les primitives doivent être le plus &amp;quot;générique&amp;quot; possible. Cela évite de devoir code deux primitives similaires deux fois.&lt;/li&gt;
&lt;li&gt;L&amp;#39;utilisation de paramètres est un point très important pour optimiser ces primitives.&lt;/li&gt;
&lt;li&gt;Il est possible de rendre l&amp;#39;affichage du résultat moins verbeux (ex: cucumber features --format progress permet d&amp;#39;afficher une liste de point comme les tests unitaires classiques)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour aller plus loin&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://watirmelon.com/2011/01/21/my-simple-cucumber-watir-page-object-pattern-framework&quot;&gt;Le blog d&amp;#39;Alister Scott [en]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rubygems.org/gems/cucumber&quot;&gt;La gem ruby de cucumber&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 

</feed>
